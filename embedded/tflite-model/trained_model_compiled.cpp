/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// Generated on: 27.11.2022 05:47:50

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

constexpr int kTensorArenaSize = 98848;

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[17];
TfLiteEvalTensor tflEvalTensors[17];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[8];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,4884 } };
const TfArray<1, float> quant0_scale = { 1, { 10.336968421936035, } };
const TfArray<1, int> quant0_zero = { 1, { -126 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(16) int32_t tensor_data1[4] = { 1, 1221, 4, 1, };
const TfArray<1, int> tensor_dimension1 = { 1, { 4 } };
const ALIGN(8) int32_t tensor_data2[2] = { -1, 2448, };
const TfArray<1, int> tensor_dimension2 = { 1, { 2 } };
const ALIGN(16) int8_t tensor_data3[16*3*3*1] = { 
  /* [0][0][][] */ -93, -127, 117, 
  /* [0][1][][] */ 88, 118, 5, 
  /* [0][2][][] */ 6, -42, -53, 
  /* [1][0][][] */ 19, -64, 26, 
  /* [1][1][][] */ 3, -33, 23, 
  /* [1][2][][] */ 127, -36, -13, 
  /* [2][0][][] */ -12, -64, -125, 
  /* [2][1][][] */ -127, -42, -20, 
  /* [2][2][][] */ 80, -30, 29, 
  /* [3][0][][] */ -127, -69, 123, 
  /* [3][1][][] */ 0, -63, 10, 
  /* [3][2][][] */ 45, 102, 21, 
  /* [4][0][][] */ 11, -86, 104, 
  /* [4][1][][] */ 8, -127, 44, 
  /* [4][2][][] */ 3, 3, 39, 
  /* [5][0][][] */ 59, 8, -26, 
  /* [5][1][][] */ -90, 56, -37, 
  /* [5][2][][] */ 127, -113, 61, 
  /* [6][0][][] */ -68, -115, -9, 
  /* [6][1][][] */ 127, -61, -28, 
  /* [6][2][][] */ 25, 50, 76, 
  /* [7][0][][] */ -67, -57, 45, 
  /* [7][1][][] */ -36, -36, -127, 
  /* [7][2][][] */ 74, 1, -53, 
  /* [8][0][][] */ 20, 51, -87, 
  /* [8][1][][] */ 55, -94, 86, 
  /* [8][2][][] */ 107, -127, -10, 
  /* [9][0][][] */ -17, -72, -7, 
  /* [9][1][][] */ -127, 88, -120, 
  /* [9][2][][] */ 46, 78, 28, 
  /* [10][0][][] */ -94, 119, -108, 
  /* [10][1][][] */ 99, -70, 127, 
  /* [10][2][][] */ 69, -119, -19, 
  /* [11][0][][] */ 76, 90, -112, 
  /* [11][1][][] */ 51, 5, -3, 
  /* [11][2][][] */ 73, -127, -17, 
  /* [12][0][][] */ 45, 54, -102, 
  /* [12][1][][] */ 22, 27, 127, 
  /* [12][2][][] */ 82, -110, -97, 
  /* [13][0][][] */ 2, 11, -35, 
  /* [13][1][][] */ -41, -127, 14, 
  /* [13][2][][] */ 21, 49, 111, 
  /* [14][0][][] */ -66, -88, -4, 
  /* [14][1][][] */ 54, 127, 71, 
  /* [14][2][][] */ -49, 23, -30, 
  /* [15][0][][] */ -127, 33, -115, 
  /* [15][1][][] */ 39, 43, -39, 
  /* [15][2][][] */ 113, 1, 7, 
};
const TfArray<4, int> tensor_dimension3 = { 4, { 16,3,3,1 } };
const TfArray<16, float> quant3_scale = { 16, { 0.0011349675478413701, 0.0014111893251538277, 0.0016709874616935849, 0.0013324306346476078, 0.0015287857968360186, 0.0010566518176347017, 0.001608464983291924, 0.0014938097447156906, 0.0014961914857849479, 0.0015305891865864396, 0.0014340075431391597, 0.0015626618405804038, 0.0012027935590595007, 0.0013899386394768953, 0.0015753447078168392, 0.0013082993682473898, } };
const TfArray<16, int> quant3_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(16) int32_t tensor_data4[16] = { 4, 0, 0, -1, -4, -5, 2, 0, -3, 0, 0, -5, -3, -1, 2, -2, };
const TfArray<1, int> tensor_dimension4 = { 1, { 16 } };
const TfArray<16, float> quant4_scale = { 16, { 0.011732123792171478, 0.014587419107556343, 0.017272945493459702, 0.013773293234407902, 0.015803011134266853, 0.010922576300799847, 0.016626652330160141, 0.015441464260220528, 0.015466083772480488, 0.015821652486920357, 0.014823290519416332, 0.016153186559677124, 0.012433239258825779, 0.014367751777172089, 0.016284288838505745, 0.013523849658668041, } };
const TfArray<16, int> quant4_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(16) int8_t tensor_data5[8*3*3*16] = { 
  /* [0][0][][] */ -61,-62,-34,-50,-43,75,86,-26,-37,-41,-83,-28,78,12,-37,86, 77,-4,-35,-26,-70,-83,-10,85,-36,71,-84,18,34,71,-39,56, 54,8,-58,-57,52,49,85,-91,31,16,79,-57,68,127,7,44, 
  /* [0][1][][] */ 86,-40,-41,-92,-58,-61,70,-52,-6,52,-43,-89,-60,11,73,46, 10,57,-19,-34,90,9,-18,-15,-40,44,-53,57,-49,-49,-83,48, -70,-48,22,65,-53,-26,-6,91,93,-66,72,11,52,29,9,-11, 
  /* [0][2][][] */ 12,3,-21,-7,-80,-75,112,79,37,-86,-82,-92,6,50,69,22, 13,-37,26,59,-32,16,21,-86,-27,-61,-69,-88,-120,-43,-72,-76, -77,-30,-22,1,-104,-84,21,2,-63,-55,19,-71,-1,-45,90,-41, 
  /* [1][0][][] */ -70,-47,80,-99,-80,12,-85,-12,-5,71,-11,69,63,-127,25,-37, -67,-21,-59,89,-23,96,22,-97,-72,36,77,33,-19,98,-30,-73, 88,-93,76,-26,42,72,96,-13,67,12,-21,-31,-78,53,30,-1, 
  /* [1][1][][] */ 81,-107,-120,50,-6,30,74,66,40,85,26,-4,5,-42,8,-88, -62,-8,73,34,114,-5,-6,32,11,-28,3,88,-86,36,-77,-7, -37,-54,-31,-59,82,-46,-23,-33,-39,51,-82,27,62,-109,94,22, 
  /* [1][2][][] */ 90,-16,2,3,102,9,108,-33,-100,5,1,83,-93,78,-84,86, -48,-86,115,-57,-44,-113,-7,13,13,124,-92,-49,-91,37,-5,96, -44,75,48,-125,28,-120,69,-72,62,37,-25,25,79,26,-31,-84, 
  /* [2][0][][] */ -70,4,79,15,-48,62,-53,-11,21,2,66,-88,-69,-36,-86,37, 65,107,-20,26,8,20,92,7,38,119,-29,26,-57,99,58,-73, -29,3,-111,21,-10,-15,-74,-101,1,-9,4,-44,19,127,7,-39, 
  /* [2][1][][] */ 57,56,24,72,90,59,98,45,54,-41,91,-38,9,-54,-48,34, 75,37,-56,-89,-45,-39,-2,-19,45,6,-31,-45,-12,-90,34,10, 73,-97,-36,85,88,37,91,-127,13,49,72,-65,-69,19,107,87, 
  /* [2][2][][] */ 22,16,66,-41,72,-45,-46,100,69,40,88,28,57,5,7,55, 50,33,-49,-58,20,67,41,-72,48,-42,110,13,-6,14,-30,-28, 59,43,119,46,116,77,-12,-102,-54,-34,-36,-62,29,-34,92,-61, 
  /* [3][0][][] */ -74,6,24,-59,4,-18,0,17,-26,-28,80,-74,-47,47,73,-5, -53,-45,-46,73,52,47,81,-101,52,-53,59,-18,62,23,-29,87, 0,54,-56,26,57,-88,23,96,-41,103,64,-71,63,92,-46,23, 
  /* [3][1][][] */ -14,-23,-106,14,-40,-60,64,44,72,3,-27,63,-10,-25,89,9, 39,-76,52,-55,97,81,-5,18,-37,-41,4,-2,29,2,15,-79, -16,30,-49,-70,-43,-37,28,-127,-8,-19,-7,26,-18,14,16,9, 
  /* [3][2][][] */ -107,-92,-72,-102,53,-25,104,75,-73,67,92,34,-77,26,-91,-84, -78,-85,45,-23,57,-11,53,-15,-53,-40,-16,-58,77,-69,-47,-39, -28,-93,38,-7,51,40,-84,71,-19,56,80,-18,49,57,79,-52, 
  /* [4][0][][] */ 50,88,50,8,106,-115,36,-6,66,80,-61,90,-24,67,87,-90, -84,-24,-9,-12,34,113,-28,-16,-47,82,-73,-89,44,75,118,47, 107,5,-94,18,81,-62,90,-116,-50,-36,102,69,-68,-16,107,70, 
  /* [4][1][][] */ -24,-104,37,72,-99,9,-24,60,-75,48,6,96,-92,-39,-108,21, -98,55,-59,-41,0,66,-62,-127,79,0,80,40,-101,-105,-46,40, -6,102,-89,-10,-56,-116,119,65,-106,-5,-27,-72,-27,-104,15,66, 
  /* [4][2][][] */ 4,-51,-44,-84,19,111,14,11,-116,-14,-1,-1,-90,-41,-8,104, 70,-34,14,-72,-101,-40,56,14,-97,-62,-31,-48,-50,-101,78,-79, -9,-89,97,28,80,-47,-30,60,104,-76,0,-60,-45,-95,-72,-45, 
  /* [5][0][][] */ 57,-39,-51,0,-113,-82,63,67,60,-78,102,-89,3,-34,79,-89, -75,-97,-90,-53,-94,17,45,-33,29,67,72,-17,-101,-93,-80,-88, -36,-50,-9,-110,35,-75,-18,57,57,-22,-9,30,-88,53,45,-53, 
  /* [5][1][][] */ -31,62,91,-28,74,50,38,10,-104,33,-37,-16,-8,105,102,47, 24,-55,-4,39,24,38,-55,-58,34,8,3,78,-48,-44,-51,36, -58,90,99,-110,-5,16,23,-74,-60,-49,14,-17,93,92,63,2, 
  /* [5][2][][] */ -102,31,-104,23,16,-19,82,-33,-81,-33,60,23,-127,100,-41,-2, -36,20,82,-47,-2,-52,-70,-70,55,81,52,-20,42,48,-31,-88, -104,-111,-13,1,45,54,59,-63,7,55,64,33,55,-10,-16,42, 
  /* [6][0][][] */ 60,-4,19,-5,20,51,63,28,11,-104,60,88,-51,-59,48,-98, 24,12,1,24,16,-94,-106,1,-10,64,64,-17,-33,-13,-114,-57, -56,-63,68,55,-33,43,-38,-92,44,-22,-67,26,-33,-14,-53,-26, 
  /* [6][1][][] */ 13,-91,17,-18,-21,66,-73,-47,-99,19,-7,-57,-7,43,-67,-1, 41,-101,-29,64,-63,23,57,-79,-21,-35,-31,-77,57,35,-111,52, -95,39,39,77,-41,-90,1,127,-41,-38,15,-95,-4,58,-98,-9, 
  /* [6][2][][] */ -9,31,-5,12,15,-21,-5,75,41,-23,64,-71,-47,-18,73,52, 63,34,93,73,-35,72,-15,-21,-106,55,103,-90,-39,-46,21,78, 34,57,56,4,-79,83,72,28,67,98,44,16,9,32,79,-54, 
  /* [7][0][][] */ -26,62,-35,16,86,-25,8,55,-29,-18,92,-79,52,-52,11,1, 49,-39,-78,-5,-30,-25,10,-56,65,67,52,33,24,71,-86,-11, -88,42,-76,-76,-58,20,3,-73,34,-33,20,7,-60,-55,35,5, 
  /* [7][1][][] */ 60,20,28,3,-19,20,37,-53,101,-37,127,-34,28,19,-11,-3, -1,-22,35,6,94,-55,55,-39,13,-16,-13,24,-13,16,-20,74, 59,-3,-88,-74,-50,7,76,-49,65,-20,-9,49,-16,62,-78,10, 
  /* [7][2][][] */ 61,-84,53,-39,82,-6,-5,3,31,22,-74,-8,-63,-91,33,17, -86,42,-17,27,-2,57,44,-35,-70,22,-25,-18,-50,-36,-48,-53, 50,22,4,-43,83,-71,-82,-13,-19,-28,11,32,-41,71,7,54, 
};
const TfArray<4, int> tensor_dimension5 = { 4, { 8,3,3,16 } };
const TfArray<8, float> quant5_scale = { 8, { 0.0016981804510578513, 0.0014489502646028996, 0.0017369005363434553, 0.0016572818858548999, 0.0013709363993257284, 0.0014985679881647229, 0.0017386850668117404, 0.001858197501860559, } };
const TfArray<8, int> quant5_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(16) int32_t tensor_data6[8] = { 14, -7, 8, -3, 15, -2, 3, -18, };
const TfArray<1, int> tensor_dimension6 = { 1, { 8 } };
const TfArray<8, float> quant6_scale = { 8, { 0.0037796404212713242, 0.0032249288633465767, 0.0038658196572214365, 0.00368861248716712, 0.0030512933153659105, 0.0033353629987686872, 0.0038697915151715279, 0.0041357902809977531, } };
const TfArray<8, int> quant6_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const ALIGN(16) int8_t tensor_data7[7*2448] = { 
  -22, 16, 3, -4, -39, -13, 8, -22, 18, 3, 1, 1, 4, 9, -15, -3, -19, -23, -9, -10, -35, -25, 13, -10, -49, -16, -59, -3, 10, 24, -4, -43, -10, -26, -36, 6, 10, 27, 3, 19, 78, -17, 37, 32, 37, -21, -26, 27, -12, -22, -39, 5, 20, 8, -20, 22, 31, -27, -20, 20, 34, -34, -15, 16, 10, 14, -22, -3, 5, 16, 9, 4, -29, -24, -11, -8, -26, 7, 3, -40, 0, -18, 55, 13, -18, -21, -40, -24, -27, -13, 12, -27, -19, 28, -3, 8, -39, 3, 34, 26, -34, 33, 21, -4, -14, 0, 64, 37, -12, -19, 6, -12, 41, 29, -13, 19, 16, -21, -23, 3, -12, 70, -73, 5, -51, 39, 44, 12, -29, -1, 45, 44, 12, 6, 58, 23, -25, 41, -22, 0, 12, 2, -5, 31, 33, 41, 35, 40, 54, 8, 9, 60, 41, -3, -1, -6, -6, 20, 18, 36, 33, 13, 45, 15, 14, 14, 45, 6, 11, 46, 56, 8, -16, 31, 77, 40, 20, 31, 22, 59, -13, 4, 52, 18, 12, 16, 6, 23, -29, 5, 29, -11, 19, -14, -17, 0, 12, -29, -33, 25, 34, 9, -12, 3, 15, 10, -7, 0, 32, -13, -3, 18, -24, 20, 16, 12, -50, -9, -59, -39, -44, 23, -2, -37, 16, -21, -34, -15, -6, 1, -30, -27, 20, 1, -26, -10, 10, 7, -33, -33, -42, -4, -20, 14, 24, -8, -45, -1, -3, 24, -42, -47, -31, 7, 44, -40, -31, 0, 12, 5, -14, -25, 6, -24, -13, 13, -27, -24, -14, 14, 7, -7, 11, -2, -14, -5, -15, 6, -1, -10, -30, 3, -5, 15, 18, 20, 15, 19, 5, 6, -8, -10, -17, -29, 4, -29, -44, -16, -4, -17, -24, -8, 24, -13, 2, -25, -28, 15, 17, 17, -17, 17, 9, -25, -29, 1, 12, 29, 22, 0, 18, 22, -2, -2, 27, -22, 4, 1, 28, 15, -20, -6, -17, 29, 13, 3, -26, -29, -12, -13, 25, -3, -9, -26, -11, 18, 3, 18, -25, -12, -12, -25, -8, -20, 27, 3, 3, -11, -25, 18, -14, -6, 12, 0, -13, 19, -13, 16, -37, -23, 3, -6, -25, 26, -28, 22, -26, -18, 4, 0, -17, -12, 20, -25, -43, -9, 24, 10, 14, 21, -21, 6, 15, 16, 46, 13, 18, 10, 28, 0, 13, 0, -2, -12, -8, -19, -16, 21, -15, 17, 26, 24, -9, -7, 27, 22, -20, -17, 16, 4, -10, 11, -12, -23, -22, 24, -4, -13, -26, -5, 26, -13, -46, 29, -40, 15, -11, 22, -14, 26, 15, 13, 11, -5, -17, -1, 23, 23, 1, 16, 11, 3, -3, -27, -19, -20, -11, -28, -7, 9, -20, 15, 9, 7, -16, 10, 5, 2, -18, -18, -22, 25, 4, -26, -26, 16, -17, 19, -15, 3, -7, 19, -10, -18, -13, -8, -11, -2, 1, -10, -19, 17, -13, -14, -11, 7, -27, 8, 12, -19, 7, 11, -10, 26, -1, -9, 0, 16, 15, -25, 19, -4, -10, -15, 3, 19, 20, -23, -2, -14, 8, -2, -14, 18, -19, -19, 17, -16, 21, 9, 7, 24, -27, 5, -6, -14, 17, 3, 9, -14, -22, 13, -18, -26, -9, 3, -20, -3, -6, 7, 23, -27, -9, 3, -11, -6, -22, -15, -16, 4, -26, 4, 10, -14, -1, -13, 17, -13, -9, 10, -41, -31, 30, 11, -29, 19, -3, 27, -15, 14, -22, 0, -7, -16, -14, 16, -55, 17, -26, 11, -22, -20, -40, 24, -41, -21, 12, -23, -12, -7, -31, -14, -35, -27, 13, -19, 8, -7, 19, -14, -21, -26, 19, 17, 21, 3, -29, -4, -24, -30, -31, -20, 10, 24, 8, -18, -36, 14, 21, -11, 27, 20, 28, -25, -19, 25, -2, -7, -21, 27, -20, -27, 26, -24, -8, -26, -20, 16, 40, -7, 25, 36, 25, -26, -16, 28, 28, 16, -23, 6, -8, -3, -24, -25, 30, 7, -6, -17, 15, 0, 11, 1, -23, -1, -16, -18, 32, 0, -25, 19, 17, 15, 25, -12, 0, -7, -17, -11, -1, 15, -5, 22, 12, -13, -9, -26, -14, -12, -14, 9, -22, -18, -1, -3, 8, 0, 12, -19, -5, 11, -1, 16, -9, 23, 29, -33, 21, -4, 25, 19, 4, -27, -2, 5, 12, 24, 17, -20, 3, 20, -20, 23, 7, -17, -18, 7, 9, -6, 17, -12, -4, -14, 11, 9, -21, 14, -8, 13, -25, -1, -6, 16, 31, 20, -18, -13, -24, 24, -17, -27, -6, -8, 7, 16, -22, -11, 18, 2, 7, 25, 10, 26, -32, 28, 3, 22, -13, 25, 33, 13, 27, -20, -26, -27, -18, 17, 0, -17, -4, 22, 6, -5, -4, -2, 4, -18, 16, -5, 29, 6, -16, 19, 16, -2, 6, 9, 23, 13, -5, 16, 13, -2, 18, -28, 16, -4, -28, -18, -3, -25, 7, 1, 14, -22, 15, -16, -15, -26, -25, -24, -7, -15, -18, -2, -31, -1, 8, -5, 29, 8, -28, -8, 15, 11, -29, 7, 25, -18, -11, 6, -16, -23, -22, 29, -15, 16, -18, 16, -13, -22, 19, -3, 27, 10, 13, 18, 13, 10, 13, 12, -25, 3, -9, 4, 13, -11, -16, -26, -25, -11, -18, 4, -14, 17, -12, -17, 16, -9, -22, 18, 20, -19, 3, 31, -21, -8, -15, 26, -3, 8, -5, 25, -21, -21, -47, -3, 11, -1, -26, 3, -22, -15, -17, -5, 21, 20, 6, 19, -16, 15, -4, -24, -3, 9, -1, -10, -9, 2, 5, 15, -23, -15, -15, 11, -20, -27, -9, 18, -2, 19, 5, 16, -8, 6, -3, 1, 9, -19, 23, 30, -1, -5, 2, -20, 32, 16, -24, -19, 3, 13, 21, -1, 35, -5, 25, 23, -28, -21, 7, -4, 26, -13, 22, -7, -22, -28, 26, 19, -25, 25, 18, -12, -7, -17, -34, -29, 17, 21, -16, -17, 0, 15, -30, -23, 5, 0, 9, -27, 18, -10, 20, -3, -8, 0, 26, 30, 3, 9, -9, -13, -19, 16, 7, 14, -16, 8, -6, -8, 28, 3, -10, 9, 6, -8, -7, -21, 17, 30, -17, 25, 16, -6, -21, -12, -16, 23, 27, 27, -24, 12, 26, 20, -6, -22, -15, 23, 17, -26, -6, 12, -5, -6, 27, -13, -17, 9, 24, 19, -21, 10, -20, 27, -15, -18, 27, -23, 25, -15, -26, -26, -23, -14, -25, 22, 21, 20, 20, 1, 3, 1, -27, 18, -19, 11, 16, -1, 12, -1, -11, 4, -34, -22, -11, -12, -19, -13, -8, 3, -13, 18, -3, 18, 15, -27, 15, -18, 16, -28, 27, 1, 7, -9, 13, -1, 19, 26, -15, 5, -16, 16, -34, 13, -20, 23, 5, 9, 13, -16, -35, 10, -13, -27, -11, 15, -11, -13, -24, -15, -20, -16, 9, 19, -22, 20, 21, 2, 21, -4, 17, -9, 25, 1, 7, -20, -25, 1, 10, -19, 7, -15, 10, 29, -8, 11, 9, 12, 22, -14, 34, -4, 21, -5, 3, -24, -8, -6, -13, 8, 27, -12, 12, 15, -6, -6, -21, -16, 20, -5, 31, 5, -21, -27, -26, -1, -8, 8, -16, -29, -15, 14, -13, -3, 28, -14, 5, 6, -18, 29, 13, 0, 6, 28, -16, 10, 12, 21, -9, -1, -8, -13, -24, -30, -19, 25, 3, -16, -5, 23, -11, 13, 24, -11, 14, -14, -27, 14, -3, -15, 19, 4, -7, -7, 6, 30, 19, 27, -19, 17, -14, 7, 27, -20, 27, -20, 21, 18, -16, -30, 21, 6, -12, -5, -6, -24, 20, 0, -11, 17, 9, -22, 0, 2, 8, -23, 4, -11, 25, 26, -20, 20, 19, 2, -1, 25, -9, -21, -5, -27, -26, -27, -1, 3, 5, 12, 14, -22, 6, 24, 22, 25, -33, 21, -13, -14, 3, 22, -5, 21, 0, 0, -8, -8, -2, -15, -35, 24, -27, 3, 20, -9, 3, 26, -29, -10, -37, -29, 1, 25, 14, 21, 16, 16, 14, -15, -22, 24, 17, 20, -32, 17, -19, 29, -21, -24, 16, -1, 7, 24, -6, -3, -8, -13, -8, 4, 15, -10, -35, -1, -16, -7, -43, -13, -32, 5, -16, -27, 13, 15, 3, 24, -27, -7, 25, -4, -10, 21, -17, 0, 6, -19, -10, -1, -20, 14, -44, -8, -25, 11, -7, -2, -9, 33, -43, 18, 23, -7, -14, -20, 16, 19, -34, 9, 26, 18, 25, -28, -33, -18, -19, -19, 7, 8, -36, -6, -8, -28, 7, 3, -8, -13, -6, -22, -15, -19, -52, -10, -24, 13, 4, -14, -4, 5, -15, -22, -20, -26, 3, 5, 37, 32, -4, -18, 8, 21, 25, 18, -8, -15, 6, -5, -14, 26, 23, -1, 17, -9, 12, 11, 9, -3, -1, 13, 38, -10, 23, 11, -5, 28, 13, 6, -30, 12, -37, 2, -4, 20, -2, 29, 13, 12, -9, -27, -15, 8, -25, -1, -5, 20, 9, 7, 5, 26, 7, 37, 4, -8, -10, -20, -25, 3, -25, -5, -38, -9, 23, 9, 17, -15, -4, -16, -36, -18, -25, 14, 10, -1, -20, 11, 9, -12, -42, 8, 8, 6, -7, 28, 25, 23, 23, -20, -39, -21, 23, 16, -26, 13, -13, -28, -3, 2, -13, 24, -37, 32, -38, -19, -12, 13, 30, -1, 8, -22, -14, 4, 22, -6, -4, 0, 5, 25, -19, 13, -11, -21, -45, 1, -23, -10, -8, 24, 10, 30, -24, -18, 20, -7, -10, -26, -36, 21, 15, 26, 29, -15, -22, 9, 3, 4, -19, -13, 5, 21, -6, 2, -15, 2, 11, 13, -47, -7, -11, 18, 19, 2, 11, -20, -16, -8, -20, 20, -28, 10, -26, 6, -19, 33, 6, 28, -34, -16, 6, -3, 1, -20, -11, 18, -2, -18, -5, 33, -17, 12, -27, -14, 8, 24, 26, -14, -33, 2, -15, -19, -30, 10, -34, 22, -2, -16, -31, -29, -26, -7, -6, 26, 23, 1, 3, -27, -7, 32, 5, -6, -3, -1, -60, -6, 8, -4, -29, -29, 18, -20, -11, -13, -27, -6, 19, 1, 9, -27, 10, 31, 18, -1, -29, 4, 7, 17, -30, 7, -27, -22, 14, 29, -5, -9, 28, 15, 15, 15, -17, -5, 0, -24, -16, -15, 8, -15, 0, -16, 32, -4, -7, 24, 21, 26, 13, -2, -6, 30, -16, -2, -6, -25, -7, 25, -29, -7, 18, -25, -7, 8, -2, -16, 10, -21, -33, -10, -34, -29, 7, 13, -14, -3, -27, -18, 12, 24, -9, 22, -11, 11, -23, -14, -1, 25, 10, -3, -31, -21, -17, 7, -38, 6, 15, 1, -18, 13, 28, 21, -5, 26, -9, -22, 23, -25, 14, 31, -18, 6, -38, 3, 29, 26, -40, 21, -34, 21, 21, -29, 6, 21, -3, 26, 3, -24, -15, -12, 6, 18, -18, 21, -30, 27, -2, -5, -16, 13, -10, 26, -45, 13, 25, 3, -6, 28, 17, 12, -17, 2, -9, -22, -28, -27, -30, 32, 9, -27, -28, 27, 14, 28, -26, -16, -17, 13, 24, 19, 25, -27, 26, -3, -29, -15, -12, -29, 6, 18, -21, 19, 15, 19, -12, -7, 21, 9, -13, 27, -26, -1, -20, -23, 18, -10, 6, -10, 9, 3, -20, -25, 31, 27, -26, -22, -17, -6, -3, 16, -6, 11, 7, 10, -30, 17, -40, -16, -47, -14, -34, 11, -28, -30, 14, 14, 23, 13, -18, 12, 18, -18, 4, -10, -20, 33, -36, -3, 23, -29, -10, -20, -20, -10, -30, -26, -28, -16, 2, 15, -26, -21, -4, -5, -15, 19, -22, -19, -3, 16, 13, -12, 17, -15, -18, 31, -13, -3, -1, 9, 5, -7, 16, 33, -25, 29, 2, -25, -2, 18, -9, 13, -13, 30, -12, 28, 13, -12, -17, -7, 35, -17, -6, -20, -19, 29, 5, 13, -16, 2, -1, -20, -32, 10, -19, -26, -36, -24, 34, 2, -13, -20, 2, -10, -2, 3, 7, 26, -16, 10, -45, 10, -17, -9, -9, 21, -9, -1, 19, 7, -28, 10, -16, -17, 26, 25, -22, 23, 3, -9, 8, 15, -29, -20, -23, -3, -54, 3, 31, -6, -14, 27, -19, -17, 30, -18, -27, 27, 3, -22, -31, -24, 5, -13, 32, 8, -22, 30, -3, 27, -8, 1, -17, -7, 6, -10, -23, 20, 3, -14, -19, -10, -28, -13, 4, -2, 32, -24, 21, 15, 8, 1, 8, 8, 17, -16, -3, 2, -26, -16, -18, 23, 2, 13, -22, 13, 6, 17, -13, 14, 30, -17, -17, -19, -31, -18, -2, 24, -12, -17, -40, 26, 16, 16, -13, 20, -13, -17, -54, -25, 0, -8, -28, -19, -5, -24, -65, -4, 31, -18, -23, -2, -21, 4, 4, 9, -21, 8, -35, 32, -13, 9, -25, 24, 18, 12, -1, 18, -35, 0, -4, 27, -31, 3, 13, 1, 24, 15, -7, -6, 16, -17, 29, -5, -5, 23, -5, -9, -17, -12, 24, 16, 13, -26, 1, 27, 11, 2, -26, 2, -14, -9, 1, -10, -27, 18, 6, 35, 8, 17, -7, 8, -32, 11, 3, 29, 37, 15, -40, 2, 21, -14, -2, -17, -12, 12, -6, -11, -47, -1, 8, -7, 19, 25, 16, 31, 21, 21, -14, -12, -22, 32, -16, -21, 7, 24, 23, 28, -21, -13, -35, -6, -4, 32, 23, 21, 1, -7, -47, -28, -20, -4, -27, 34, 7, 25, 14, -15, -4, -4, -42, 2, -31, 29, -17, -8, 7, -18, -33, 10, 26, -25, -18, -15, 0, -14, -20, -3, 9, 22, -27, 21, 29, -9, 15, 15, -1, -14, 21, -3, -33, -5, 7, 21, -23, 16, 5, -26, -28, 23, -34, 17, 5, 13, -54, 2, -21, 19, -6, -13, -6, 17, -30, 4, -6, -17, -5, -24, -14, 2, 9, -25, -12, 2, 17, 33, -37, 8, -24, -1, -27, -2, -21, 2, 29, -21, -1, 0, 2, 22, 5, -14, 19, 12, -31, 31, -14, -18, 3, -16, 6, 33, 34, -17, 14, -16, 29, 27, -28, 21, -14, -6, 8, 9, -18, 27, 10, 0, 0, 8, -34, 2, -13, 6, 18, 3, -26, 11, -13, -15, -16, 27, 9, 4, 22, -21, 17, 30, 6, 26, 16, 11, 11, -17, 8, -14, -15, 25, 11, 32, 19, 1, -32, -28, 10, -11, 8, 23, -27, 0, -8, -14, -35, -18, -33, 33, -21, 23, 15, 12, -8, 11, -13, 13, -38, 24, -30, -24, -11, -19, 42, -1, 7, -1, -8, 15, 1, 3, 39, 22, -35, 20, -24, -28, 19, 6, 17, 11, -24, -7, 13, -16, -3, -8, -32, -8, -28, 25, -11, -1, -39, 9, -12, -4, 3, -7, -25, 24, -6, 0, 9, 11, 24, -15, 4, 4, -20, 25, -22, 22, 
  -6, 20, 11, 25, -6, 3, -11, -12, -4, 14, 15, 5, 10, 11, 15, 8, -37, 15, -42, 2, -7, -29, 75, 33, 6, -37, -98, 12, 4, -2, -42, -25, -44, -49, -79, -16, -54, -11, -7, -54, 10, -41, 32, -5, 41, 24, -15, -50, 15, -52, -74, -10, 0, -32, -35, -47, 73, -17, 3, -30, -11, -20, 10, -7, 7, 17, -19, -15, 18, -14, -40, 5, -18, -12, -52, -53, -58, 6, -31, 0, -71, -52, -127, -43, -58, 4, -28, -16, 14, -53, -62, -24, -11, -29, -62, -6, -53, -57, -65, -17, -58, 11, -8, -12, -27, 2, -76, -71, -8, 13, -21, -13, -14, 9, 6, -17, -39, 16, 13, -26, 35, 37, -13, -13, 4, -12, 53, -24, -15, -18, 16, 21, -30, 19, 10, -7, 24, -25, -22, -20, -57, 35, -12, -3, 8, 47, -13, 36, 45, 22, 23, 15, 42, 40, 1, 48, -9, -10, 3, 15, -27, -7, 40, 21, 30, -11, 37, 56, 75, 30, 13, -13, 30, 5, -31, -5, -38, -13, 11, 8, -21, 21, -17, -35, 12, 21, 6, -25, 7, -6, 9, 3, 2, -6, 6, -11, -12, 22, -16, 12, -15, -18, 16, -1, -10, -37, -32, -25, -26, -20, -71, 17, 25, -31, -28, -23, -35, -21, -48, -51, -18, 17, -40, -9, 3, -33, -47, -21, -55, -36, -7, -23, -9, -4, -26, -8, -14, -16, 1, -36, 68, -49, -99, -28, 54, -26, -39, -43, -49, -31, -122, -26, -75, -3, -5, -8, 15, 1, -3, -11, -3, 17, 21, -22, -16, 25, -5, 0, 20, 10, -18, 11, 7, -19, -4, 6, 6, 10, -12, 7, -20, -20, -2, 3, -19, 17, -5, -28, 17, -24, -23, -23, 27, 6, 16, -17, -1, -26, 9, 25, -24, 27, 7, 11, 23, 22, 28, -12, -21, 16, -23, 17, -8, -24, 14, 3, 10, 27, -5, -10, -6, -12, -28, 8, -11, 22, -15, -2, 4, -15, -11, 10, -9, 16, 23, -20, -1, -17, -9, -27, 14, 17, 3, 5, 8, 25, -9, 29, -26, -29, -13, -4, -14, -15, 6, 7, -5, -28, -6, -22, -41, 27, -4, 25, -19, -2, -3, -2, -31, 1, -17, -1, 28, 17, -1, -2, -3, -12, 15, -8, 2, 16, 29, 25, -24, -20, -15, -14, -4, -19, -1, 16, -35, -16, -4, 12, 25, 0, -22, 5, 16, -23, 20, -4, 3, -18, -18, -20, 30, -5, -5, 31, 6, -28, -27, 5, -4, 16, -7, 28, 0, 13, -23, -25, -7, -6, 12, -12, -29, -28, -2, -21, 1, -24, -26, -1, 7, -8, 9, -13, 4, -6, -9, -1, -23, -1, 16, 15, 9, -16, -8, 7, 20, -20, 2, 3, 27, -22, -11, -21, -4, -4, -7, 15, 15, -15, 7, -14, -10, 16, -14, 10, -6, -20, 49, -4, -14, 10, 12, 20, -7, 28, 7, -22, -28, 0, 18, 22, 14, 15, -17, 15, -11, -16, -17, -5, -62, -22, -5, -23, 4, -10, -1, -18, 14, 26, 34, -8, 14, 27, 19, 24, 39, -8, 1, -17, 28, -24, 14, -16, 14, -16, 35, 17, -10, -2, -12, -3, -29, 8, -3, -13, 15, 13, 1, 21, 15, 8, -34, -1, -14, -25, -15, -7, 31, -27, 32, 6, 9, -20, 5, -23, -5, 18, -12, -24, 4, -6, 5, 1, 19, 0, -43, 21, -19, -5, 28, -23, -16, -18, 2, -5, -8, -7, -27, -1, -26, 7, 0, 2, -20, -29, 10, -3, -17, -21, 22, 2, 12, -19, -18, 4, 32, -25, 7, 6, 14, 6, -3, -4, 15, -6, 38, -21, 17, 15, 2, 2, -35, -11, 27, 7, 19, -12, -9, 5, -17, -23, -1, -17, -15, 16, 3, 16, -24, 12, 18, 17, -2, 6, 13, 28, 26, -24, -5, 14, 15, -19, 21, -13, -30, 11, 25, 21, 7, 24, -6, -7, -33, -21, 4, -9, -26, 16, 3, 23, 17, 31, -8, -3, 15, 9, 26, 2, -2, 29, -32, 17, 13, -3, -14, -1, -15, 26, -16, 24, -13, 14, 14, 28, -21, -9, 10, -16, -17, -5, 4, -12, 1, -20, -11, 5, 10, 10, 11, -7, -42, -11, 10, -10, 5, -12, -8, -5, 25, 23, 9, 6, -8, 13, -20, 4, -15, -25, -24, -5, 27, 21, -9, -23, -5, -25, 12, 9, 27, 10, 13, 21, -31, 22, -5, -23, 17, 15, 25, 23, 9, 12, 34, 6, -16, -5, -22, 8, -28, 13, 13, -7, 25, 20, -17, 29, 7, -1, -3, -30, 12, -7, 6, 4, -9, 12, 29, 9, 4, -7, -12, 5, 2, -24, 14, -21, -18, 11, 3, -10, -5, 18, -10, -6, -27, -23, -17, -17, -1, -3, 0, 22, 33, 25, -22, 4, -13, 11, 4, -4, 28, 25, 19, 21, -14, 6, -5, -11, -14, -4, 19, 26, -15, 7, -8, -17, -13, -29, -26, -16, 7, -26, -1, -8, 15, -3, 21, -23, 5, 24, 9, 24, -27, -20, 24, 2, 31, 6, 6, 20, 13, -3, -6, 26, 7, -16, 3, 8, 4, 23, 6, -3, 4, 28, 19, 1, 27, -20, -2, -6, 18, -5, 26, -5, -25, 5, 1, -18, 14, 18, -7, -10, 30, -16, -14, 5, 20, -16, -18, 16, -12, -19, 19, 29, 8, -13, -25, 29, -8, 1, -26, 17, -4, -18, -11, -20, -13, -17, -3, 3, -13, 19, -13, -19, -16, 33, -19, 17, -5, 27, -17, 16, -13, 1, 20, 25, -10, 15, 14, -18, 21, -5, -2, 13, -33, 11, -6, 10, -21, 19, -15, -20, 17, -16, -26, -3, -16, 10, -9, -5, -28, -28, -10, 22, -28, 19, 17, 0, 6, -8, -23, -22, 16, 5, 2, -11, 20, 16, 0, -9, -15, 9, -28, -4, -27, -26, -8, -16, -10, 20, -28, -29, -30, 10, 14, 30, -12, 26, -19, -6, -4, 13, 10, 3, 9, 14, 3, -24, -28, -1, 0, 7, 30, -28, -14, 14, -22, 14, 5, -23, -5, -25, 15, -12, 19, -27, 28, 12, -6, -22, 9, 8, -14, -13, 31, -20, -6, 27, 31, 26, 19, 12, 2, 4, 32, -26, 16, 11, 20, 14, 4, -4, 6, -28, 17, 15, -20, -19, 24, -12, -23, -13, 30, 13, 16, -26, -15, -3, -6, 1, -23, -18, 17, 8, -3, -9, -27, 10, -11, 21, 6, -25, 12, 5, -14, 1, 27, 26, -2, -22, 11, 9, -20, 14, -18, -12, -20, 22, 17, 1, -26, 1, 3, -20, -3, -24, -26, 5, -7, -15, -18, 18, 3, 24, -7, -11, -13, 15, -6, -19, 26, 10, 18, -6, 29, 24, -25, 13, 22, 27, 12, -7, 0, -20, -16, 4, 24, -18, 36, -14, 7, 19, -25, 25, -24, 12, 18, 26, 19, -22, -22, -23, -13, 7, -7, 27, 11, -5, 11, -24, -2, -18, 3, -6, -8, -6, -25, -12, 16, -8, -17, -8, 30, -7, -4, -13, -19, 1, 1, 18, -24, -11, -23, -27, -1, 14, 18, 26, 11, 23, 6, -25, 0, -9, 2, 22, 2, -27, -12, -2, -19, -14, -5, 8, 26, -16, 23, -25, -23, 16, -10, 16, 17, -26, 7, 6, -23, -20, -2, 0, 2, 18, -17, 6, -25, -3, 17, 16, -30, 29, 21, 2, -16, 15, 27, -17, -17, -28, 13, -19, 4, 11, -13, -18, -27, 16, 7, 4, -34, 0, 40, 18, -29, -15, -25, 7, -13, 13, -15, 20, -3, 25, -24, 6, 3, -22, -4, -9, 25, 11, 25, -4, 13, -7, -20, 1, -1, 7, -3, 2, 26, -13, 13, 28, 10, 2, 14, -29, 39, 30, 7, -21, -12, -7, -25, 4, -38, -2, -2, 6, 5, 25, 14, 29, -14, -11, -18, 23, -13, 2, 5, -22, 1, -19, 9, 16, -20, 10, -13, 1, 5, 3, -9, 4, -15, 22, 23, -11, -24, -22, 11, -1, 20, 16, -20, 20, 12, 14, 8, -4, -9, -32, -26, -25, 32, 23, 3, -28, 30, 25, 41, 8, -4, 14, -26, -13, -23, 7, -12, -24, 7, -4, 17, 17, -15, -20, 27, -6, -18, -9, -8, 9, 17, 8, -23, 11, 1, 33, 31, 3, -15, -27, 26, 5, -18, 16, -15, 26, -12, -18, -26, -11, -10, -9, 20, -22, -4, -24, -4, -4, 3, -15, -4, -17, -16, 1, -14, -5, 4, -22, -15, 3, -22, 7, 6, 19, 11, 8, 30, 22, 11, -22, -3, -12, 8, 1, -27, 0, -15, -19, 7, -4, -30, -16, 4, -19, -4, -31, 44, -23, -34, -27, 17, 27, 16, 21, 14, 31, 11, 18, 8, 18, -6, 33, -21, 14, 8, -3, 2, -24, 17, 31, -2, 28, 12, 7, 15, -12, -4, 2, 28, 14, -10, -6, -28, 2, -28, 9, 14, -4, 20, -22, -8, -22, 21, -1, -17, -18, -33, -20, 9, -4, -4, 16, -5, 3, -6, 5, -15, 9, 1, -14, 0, 22, 14, -25, 15, -5, 22, -11, 22, 23, 35, 3, 8, 2, 20, -2, 7, -6, 24, -27, 23, 18, 8, 7, -1, -3, 32, 5, -24, 23, -10, -21, 16, 4, -22, 27, 8, 21, 25, -37, -18, 18, 27, -21, -11, -20, 5, 7, -16, 22, 13, 4, 7, -15, 21, -20, 20, 14, 24, -22, -1, 7, -30, 18, 8, 9, 26, 16, -35, -3, 34, -17, 16, -18, -9, -22, 39, -19, -27, 14, -13, 19, 4, -9, 16, 17, 24, -4, 16, 3, -23, 3, -22, 32, -6, -4, 11, -18, -37, -15, 2, -5, -19, -22, 23, 18, -7, -26, -13, -26, 15, -29, 14, 4, 39, 5, 22, -14, -8, -5, -1, 23, -22, -25, 2, -16, 7, 26, 48, -6, -4, -17, 3, 33, -14, 8, -6, 26, -24, -4, 12, 4, -22, 20, 23, -19, 17, -13, 8, 13, -14, -10, -22, 24, 19, 19, -10, 4, -23, 5, 18, -14, 37, -21, -6, 4, -20, 33, 48, -10, -5, -24, -20, 26, 8, 1, 2, 4, -8, 21, 1, -26, -5, 33, 34, 24, 10, 6, -2, 28, 23, 32, 21, -26, -25, -12, 15, 1, -36, -16, -31, 15, -5, 0, -6, 7, -16, 2, -21, -19, -23, 8, 35, 7, -12, -26, 8, -9, -8, -4, 2, -22, 11, -22, -3, 7, 0, -14, -11, 22, 19, -9, 14, 13, -5, -10, -29, -29, -3, -26, -26, 11, 33, 30, 14, -14, 24, -19, 21, -13, -1, -14, -35, 10, 10, 12, 11, -27, 15, -21, 19, 28, -21, 17, 11, 10, 40, -22, -4, 3, -28, 24, -15, -6, -10, 12, -11, -19, -27, 19, 28, -1, 18, -17, 27, 29, 16, -20, -20, 3, 17, 11, -3, -28, -5, -41, -1, -8, 0, -28, 12, -8, 23, 18, 31, -10, -11, -22, 13, 20, -17, 25, -2, -5, -18, 21, -19, -15, -16, 1, 40, 24, 9, 24, 17, -14, 22, -7, 4, 29, -9, 19, -30, -10, 18, -5, 34, -15, 18, 5, 3, 23, 9, 17, 21, -21, 6, 24, -20, -19, 10, -3, -15, 29, 21, -3, -6, 9, 26, -13, 5, 32, -20, 33, -15, -28, 7, 17, 27, 24, 1, 14, -25, -9, -24, -26, 0, -11, 6, -17, -24, -19, 0, -17, 28, 17, 30, 8, 9, -4, -32, 3, -35, 21, -5, -28, -24, -26, 2, 26, 0, 12, 18, 5, 21, -13, -1, 6, 28, -3, 11, -23, 4, -13, 15, -2, -30, 0, -20, 29, -27, -19, 21, -2, 16, 22, 0, -17, 3, -9, -3, -12, -19, -7, 33, -6, 8, 23, -24, -21, 35, -26, 13, 16, 14, 14, -15, -37, 10, -7, -6, 27, 25, 22, -14, -1, 22, 13, -2, -14, -7, 28, 30, -25, -30, 13, 27, -20, -17, 21, -22, 34, 12, 8, -14, -6, 2, 8, -8, 10, -8, 25, -19, -5, 25, -5, 14, -16, 19, 6, 18, -12, -4, 24, 30, 3, 31, -21, 7, -20, -5, 0, -13, 18, -23, -9, -13, 5, 5, 29, -17, -22, -13, -14, -21, -4, -17, 2, -15, 29, -8, -9, 4, 10, 28, 26, 34, 23, 13, -11, 36, -20, 34, -8, 23, -13, -32, 18, -10, 6, 22, -30, -4, 33, 16, -19, -35, -2, -12, 14, 5, 10, -6, -9, 8, 16, 5, -5, 1, 8, -1, -16, -10, -6, -18, 0, 36, -9, -2, 1, 34, 4, -22, -16, 8, 29, 21, 28, 28, -27, -4, 30, 18, 20, 26, 31, 27, 12, -12, -13, -1, 1, 11, -17, 14, -17, 33, -5, 28, -9, -17, 26, 19, -12, 2, 16, 24, 28, 24, -13, 16, 29, 23, 7, 24, 5, 28, -17, -22, 19, 10, -7, 24, 5, -32, -12, 40, 19, 3, 2, 34, 20, 9, 13, -8, -25, 12, -10, 2, 28, 15, 4, -9, 8, -4, 9, 4, 22, 0, 29, 13, -7, -11, -25, -1, -2, 15, 1, -5, 2, -29, -19, 6, 8, 28, 8, 28, 28, 26, -30, 11, 32, 10, 27, 22, -2, -6, -27, -3, -29, -15, -8, -26, -4, 24, -10, 35, -33, -27, 15, 20, -9, -3, -18, -9, 24, -5, -13, -41, -7, -27, 13, 10, -17, -13, -15, -2, 19, -5, 21, 22, 14, 1, 14, -8, 11, -18, 3, -18, 38, 11, 24, 21, -8, 26, 7, 19, -27, 3, -9, -29, -5, 26, -16, -30, -12, -27, 8, -11, 3, 14, -20, 22, 33, 4, -26, -9, -3, 5, -29, 6, 28, 21, 27, 3, 12, 11, 6, 22, -9, 2, -26, -29, 1, 11, 0, -2, 1, -21, -23, -21, -8, -18, -23, 7, 18, 4, 1, 34, 16, 3, -2, -14, -18, -3, 24, -5, -21, 22, 30, 9, -2, 35, 3, -7, 2, 12, 8, 27, -7, -14, -4, -15, 12, -22, -2, 21, -5, -11, -22, 24, 13, 25, 18, 34, -2, 12, 12, -1, -3, 18, -10, -7, 21, -18, -4, -9, -23, 28, -21, 1, 28, -2, -15, 15, -20, -14, -20, -28, 12, -30, -9, -10, 33, -20, 3, 5, 33, 9, -7, 41, 17, -19, 7, -18, -11, 23, -5, -4, 24, 16, 18, -12, 18, -12, -15, 11, -27, -4, -26, 11, 1, 25, 12, 5, 24, 2, 29, 3, -33, 22, -6, -18, -24, -13, 0, 18, 14, -8, 30, -9, 31, 13, -11, -11, -34, -2, 25, -4, 28, 15, -23, -22, 38, -9, 17, -4, 5, -10, -11, 13, -11, 16, 14, -9, -16, 21, 12, 13, -25, 2, 0, -26, -18, 6, -1, -10, -8, -44, -8, 12, -3, 12, -25, -26, 3, 25, 9, 11, 21, -9, -15, 41, -12, -10, 6, -8, 28, 8, 13, -13, -4, 16, -1, -10, -1, 9, 25, 14, -41, -33, 20, -36, -13, 18, 29, 7, -5, -31, -12, 
  -20, 13, 9, 5, 13, 23, -18, 11, 10, -3, 5, 1, 2, 13, 29, 4, -86, -17, -66, -78, -46, -1, 22, -19, -48, -16, 47, -2, 6, 44, 21, -5, 56, 31, 52, 30, 58, 14, 60, 41, 14, 53, 35, -5, 27, -1, 41, 27, -27, -10, 35, 32, 6, 27, 18, 30, -78, 41, -6, 24, 6, 7, -11, -18, -18, 23, 1, -1, 13, 13, -24, 26, -26, 6, -30, 1, -29, -2, -19, -22, 23, 4, -31, -7, 26, 28, -35, -7, 37, -3, -1, -18, -30, -31, 14, 5, -35, 0, -15, 25, -15, -17, -47, -24, 47, 3, 9, 19, -17, 22, 14, 29, 23, 9, -9, 18, 16, -4, -1, 9, -35, -15, 46, -27, -9, -7, -25, -16, 11, 6, 7, -21, 49, -2, -11, -23, -8, -55, -24, -14, -41, -22, 10, -22, -74, -11, -16, -37, -16, -7, 15, -16, -74, 13, 33, 8, -36, 21, 36, -22, -42, 12, 30, 34, 28, 53, -3, 14, -13, 45, 57, 71, 29, 36, 78, 52, -11, 51, 63, 64, -1, -4, 55, 13, -39, -29, -13, 0, -26, -40, 5, -4, -28, -33, -7, -10, -18, -22, -15, -2, 13, 10, 2, 24, 46, 2, 16, -17, 48, -18, -32, -33, -12, -22, -45, -29, -23, -60, -71, -39, -24, 28, 47, -13, -46, 6, 17, -30, 13, 10, -17, -7, 19, -7, 37, -35, -70, 32, -2, 11, 18, 5, -55, -17, 17, -40, -6, -18, 38, -27, -64, -33, -60, 5, 25, -14, -13, -6, 17, 6, 25, -9, 12, -14, 0, 25, -18, -11, -3, -13, 25, -21, 1, 18, 0, 4, 17, -22, -26, -6, 0, 13, 5, 14, -20, -6, -11, 25, -14, 5, -23, -32, -8, -20, 26, 11, 2, 3, -5, 23, -11, 1, -8, -1, 21, 22, 8, 6, -21, -20, -8, -10, -29, 12, 15, 25, 17, 34, 2, 1, -16, -17, 20, -7, 25, 9, -5, -21, 20, -27, -27, 10, 13, -17, -9, 24, 6, -2, 9, -31, -11, 17, 28, 15, 13, 3, -16, 4, 17, -18, -25, -4, 14, 9, 16, -19, 20, -24, -4, 22, 3, -2, 17, 22, 26, -1, 4, 4, -39, 13, -12, 5, -19, 16, 27, -2, 9, 4, 25, 12, 24, 25, 22, 8, 18, -5, 13, 23, 7, 5, 14, 21, 0, 13, 2, 18, -1, 0, 4, -18, -22, -6, 32, 18, -4, 4, 4, -4, -5, 12, 1, -32, -5, 22, 8, 24, -17, 10, -2, 8, 10, 21, -24, -13, -1, 3, 8, 14, 32, -14, -10, -18, -38, 27, 3, -19, -21, 35, -10, 3, -26, 23, 49, 35, -5, -26, -12, 17, -6, -22, 31, 33, -19, -16, -25, 0, 3, -12, 7, 1, -6, 25, 24, 18, -30, -18, -1, -2, -21, 24, -28, 30, -23, 17, 1, -17, -5, -18, 16, 9, -13, 19, -16, 23, 23, 16, -25, -19, -10, -14, -41, 14, -3, 13, -14, 21, -23, -2, -15, 11, -10, 28, 19, -2, -7, 28, 7, -23, -5, -29, -11, 7, -69, 0, -8, 11, -25, 1, 4, 6, 6, 20, 3, 27, 2, -5, 0, -25, -16, 25, 17, 26, -2, 16, -4, 22, 16, -24, 22, 3, 15, -13, 11, -24, 26, -17, 12, -24, -17, 20, 2, -14, 28, -9, 0, 26, 11, -24, -21, 1, 4, 29, 15, 22, -29, -23, 12, -26, -14, -13, -8, -8, -16, -21, -23, -3, -7, -9, 23, -10, 9, -22, -4, 26, -56, 0, 10, 3, 9, 23, 20, -24, 7, -2, -10, -11, -18, 0, -12, -9, 32, -27, 3, 7, 27, 12, -4, 7, -27, 0, 10, -19, 0, 30, 20, 24, -24, -10, -12, -6, -15, -19, -5, 29, 22, -12, 19, -10, -14, -27, -6, 20, 3, -9, 14, -14, 8, 18, -6, -23, 10, -18, -4, 20, -12, 12, -18, 24, -30, -1, -17, -8, 8, 25, 6, -9, -16, -18, 17, -15, 11, -18, -22, -18, -29, -25, -28, -10, -27, 17, -22, -21, 14, -11, -20, 11, -12, -2, 15, -26, 1, -21, 27, -26, -7, 0, -24, -11, -12, -13, 36, -16, -21, 22, 11, -19, -16, -6, -34, 27, 6, 26, 15, 5, -28, 13, -25, 25, -22, 0, 16, -9, -33, -11, -20, 13, -7, 6, 6, -23, 12, 13, -30, 19, 27, -19, -12, -14, 25, 21, 6, -27, 30, -21, -9, -2, -2, 5, -14, -27, 21, -24, -22, -21, 3, 8, -18, 29, 26, 31, 25, 12, -21, -17, -9, -22, 29, 14, 32, 13, -23, 24, -3, -11, -26, 4, -1, -22, 21, -14, 15, 9, 24, 17, 3, 27, 35, 17, -20, -29, -27, -28, -10, -3, 0, -15, 6, -4, -24, 31, -24, -27, 7, -20, 3, 3, 13, 9, -7, -27, 24, 7, -16, 10, 26, -19, 24, -14, 22, -18, -19, -25, -18, -3, 28, -11, 13, -9, 1, -27, 7, 22, -5, -1, -35, 27, -17, -4, -9, 20, 29, -27, -39, 14, -22, -7, -28, 15, 19, 13, 18, 19, -26, -6, -10, -9, 27, -2, 12, -17, 8, -25, -2, 27, -13, -6, 25, -13, -17, 11, 11, 2, 21, 2, 4, -16, -22, -4, 13, -21, -12, -23, -2, -18, 20, 28, 24, 20, -12, 22, -45, 20, 16, 0, -27, 11, 5, -2, 4, 29, 6, -5, -14, -14, -5, -10, 11, 10, -28, -2, 26, 8, -25, -14, -10, 16, -25, 17, -2, 12, 13, -2, 15, 5, 0, 16, 21, -28, -11, -7, 17, -19, -6, -8, -7, 7, -20, 4, 3, -24, -15, 32, 18, -16, -4, 15, 4, -27, -10, -27, 9, 26, 25, -24, 25, -5, -1, 19, -14, 26, -7, 30, 13, 20, 6, -6, 18, 0, -16, -6, 16, 19, -1, 26, -10, -16, -10, -25, 12, 27, 11, 27, 6, -24, 10, -2, -16, 5, 21, -29, -3, -21, 19, 27, -5, -18, 11, 0, 19, 28, 25, 0, 22, 15, 24, 17, 2, -7, -10, 12, 18, -13, 14, -8, 21, -15, -3, -7, -6, 4, 25, -16, 25, -3, 6, -8, -50, -15, -8, -10, 0, 23, 23, 27, -1, -27, -3, 28, -1, 3, 8, 28, 15, 24, -8, 15, 15, -2, 24, -19, -36, -25, -18, 12, -21, 13, 22, -25, -16, 17, -1, 26, 17, -19, 2, -25, 3, -19, -36, 28, 5, 13, 12, 0, -23, 23, -8, 26, 22, 10, 18, 27, 8, -1, -12, 11, -24, 13, 0, 28, -35, 25, 9, 29, 16, 8, -24, -11, -12, -12, 7, 4, -9, -3, 25, 4, 14, -15, -16, 11, 17, 5, 25, 27, -17, 19, -12, -11, 11, 10, 30, -13, 9, -5, 14, 26, 13, 18, -16, -17, 4, 17, 1, -1, 10, 19, -23, -2, -5, 12, -27, -2, -5, 28, 6, -11, 11, -27, -3, 19, 4, -7, 26, 6, -34, -2, 9, -2, -22, -14, -7, 9, -26, -4, 15, 22, 26, 28, -2, 14, 9, -1, -7, 0, -25, 28, -21, 29, -2, 12, 32, 14, 28, 8, -10, 16, -17, -12, 18, 25, 18, 9, -27, 27, -6, -13, 2, 20, 23, -23, 9, 25, -34, 0, -28, 0, -21, 11, 4, 0, -9, 11, -29, -22, 17, 21, -9, -22, -5, 17, 2, -14, -13, 2, 28, -19, 26, 17, -14, -28, 27, 8, -1, 13, -4, 28, -25, 18, 5, -17, 21, 20, -5, -26, -13, -8, -7, -8, 9, 0, -37, -24, -8, 11, -3, 0, -8, -14, -1, -16, 5, 25, -10, 17, 19, -1, 2, 21, 35, 20, 6, 11, -25, 16, -15, 9, -8, 20, 6, -5, -25, -12, -38, -17, -7, -15, -4, -12, 28, -22, 16, 5, 22, -20, -16, -20, -21, 21, -4, -21, 2, 26, 23, 15, 26, -2, -3, -14, 28, 7, 1, -6, -17, 9, 17, -15, -14, 0, 9, -15, -10, -26, -27, 10, 10, -9, 22, 15, 7, 21, -1, -26, 4, -20, 2, -32, 7, 12, -5, -4, 13, 3, 5, 31, -7, 27, 12, -15, 35, 7, -5, 15, -24, 23, 43, -8, 37, 5, -14, 16, -31, 14, -17, 3, 40, 25, -28, 16, -23, 23, 15, 18, 16, -15, 30, -25, 24, 20, -14, 19, -5, 31, 44, 17, -29, 16, -3, -10, -6, 8, -2, -19, 29, 14, 26, 2, -5, 26, -23, 1, 10, -15, -13, -25, 0, -14, -22, 0, 15, 5, -14, -23, -12, -24, -3, -24, 38, -8, 2, -11, 29, -3, 12, -15, -40, 13, 8, -24, 5, -18, 7, -27, -3, 16, 25, -26, 25, 28, 23, 1, -19, 21, 15, 20, -19, -17, -10, -31, -31, 23, 20, -21, 9, -14, 10, -19, 15, -19, 36, -9, 2, -13, 38, -17, 35, 9, -19, 21, 24, 18, 11, -20, -1, 13, 31, -11, 18, 22, 7, 17, 25, -25, 19, -28, 17, -2, 13, 6, -15, 17, -1, 30, 0, 17, 7, 20, 11, 18, 6, 20, 27, -2, 28, 14, -18, -16, 6, -30, 1, 30, 22, 4, -26, -12, -29, -4, 4, 5, -15, 13, 3, 8, 10, -15, -5, 15, 2, 29, -27, 10, 3, -19, -1, -22, -9, 3, -4, 5, -15, -24, 8, -5, 1, -11, 21, -3, 9, 30, 27, 4, 37, 20, -25, 13, -13, -18, 26, 5, -8, -7, -17, -12, 32, 29, -10, 19, -15, 17, 10, -15, -24, 22, 36, 12, 43, -18, -31, -7, -21, -22, -6, 20, 28, 16, 8, 13, 12, 17, -1, 5, 20, -9, 27, 20, -24, -24, -18, -10, -14, -9, 9, -12, -18, -18, -3, -25, 28, 16, 15, 18, 20, 4, 32, 12, 16, 18, -27, 21, -18, -26, -3, 22, 6, -8, -2, -29, -1, -5, -2, 18, -17, -19, -26, 22, 5, -1, -10, -19, 40, 4, -1, -13, -28, 1, 21, 2, 49, 7, 26, 26, 34, -22, 32, -18, 28, -22, -14, 16, -24, 7, 14, 27, 12, 31, 3, 13, -15, 18, 9, -6, -8, -12, -30, 23, 34, -5, 32, 10, -16, 14, -10, 18, -4, -22, -18, 12, 24, 13, -13, -5, 21, -4, 12, 7, -6, 23, 22, 19, -1, 3, 25, -6, 14, 25, -17, 7, -3, 19, 22, 30, 18, -34, -15, 24, 2, -17, 19, 24, 15, 1, 15, 14, -18, -28, 11, 20, 10, 3, -23, -30, 0, 19, 21, -26, -7, 7, -8, -6, 22, -3, -1, -9, -16, 28, 5, 5, 27, 31, -16, 31, 6, 17, -28, 3, -6, -26, -13, 31, -5, -5, 14, -27, 2, -5, 32, 13, -4, -4, 5, -14, 3, 8, 6, -5, 31, -38, 2, -19, 5, -18, 17, 32, 28, 2, 2, -26, 21, -23, 4, -22, 13, -10, -52, 21, 22, 11, -3, 7, 5, 1, -34, -2, -24, 29, -7, -29, -6, -15, 16, -29, -23, 13, 2, -27, 24, -25, -1, 16, -1, 27, 16, 9, 23, -19, 30, 9, 7, 29, 14, -11, 9, 33, 14, -12, -21, -12, 12, 14, 39, 31, 28, 16, 36, -17, 29, -29, -5, 25, 29, 0, 6, 19, -12, -24, 0, 25, -7, -4, -18, -17, -2, -4, -2, -17, 4, 24, 14, -5, -1, -6, 25, -37, 6, 13, -34, 12, 19, 18, 16, -16, -6, -9, 40, 19, 23, -27, 8, -1, 4, 29, 22, -1, 16, -2, 23, -25, -29, -13, 38, -4, 7, 22, 29, -8, 12, -9, -5, 13, 22, 0, -12, -17, -1, 15, 21, -3, 27, -9, 2, 31, 11, 25, 19, -4, 26, -11, 19, 7, 16, -26, 3, -13, -1, -29, 19, 9, -7, 12, -2, -16, -13, 22, 25, 3, -10, 14, 42, 31, -4, 10, 11, 21, -2, 21, 1, -10, -4, 30, 7, -12, -30, -2, 13, 4, 28, -5, 16, -13, 16, 6, -4, -12, 4, 30, -1, -35, 26, -8, -21, 22, 18, 12, 35, -24, -33, -5, 19, 30, 37, 20, 17, 1, 5, 19, 13, -22, 2, 4, 4, 40, 1, 23, 6, -20, 39, 5, 22, -32, 1, -4, 28, 8, -23, 8, 33, 19, 10, -6, 1, 4, 18, -18, 20, -9, 61, -17, 19, 18, -3, 4, 41, -23, 31, 15, 0, -14, 13, 5, 5, -10, 10, 10, 0, 5, 30, 8, 29, 23, -15, 18, -2, -2, -7, 29, -6, -2, -24, -17, 14, -1, -18, -24, 17, -20, 30, 14, -9, -17, 21, 11, 24, -21, 1, -2, 12, 5, 2, 17, 26, 20, -7, 19, 38, -3, -23, -17, -22, 34, -9, -25, 38, -11, -1, 5, -17, -18, 11, -20, 24, -26, 37, 3, 16, -1, 25, 11, -18, 26, 18, -26, -16, -36, 17, -10, -8, -26, 1, 12, 22, 1, -13, -20, 7, 4, 1, 2, -5, 4, 35, -26, 4, -12, 9, 5, 3, 10, 12, -4, -17, -19, 17, 9, 5, 17, 0, -19, -5, -27, 15, 12, -11, -12, -31, 10, 7, -8, 27, -19, 20, -34, 18, -6, -4, 13, -4, -29, 18, -32, -26, -11, -16, 21, -8, 4, -14, 23, -30, 28, 29, 13, 6, -9, -12, -1, 17, 32, 16, -12, 27, -26, 12, -29, 9, -19, -6, -15, 20, 26, -8, 18, 41, 6, 6, -10, 2, 16, -23, 2, -14, -14, 11, -15, 22, -24, 3, 34, 0, 4, -17, -20, -22, -24, -14, 26, 27, -30, 6, -9, -7, -2, -16, 4, -8, -2, 0, -12, -15, 21, -19, 14, 13, 17, 0, -23, -3, 9, -12, 19, -15, 25, -3, 27, 0, 4, -4, 3, 1, 21, 19, 13, 29, -25, -3, -17, -20, -11, -7, 10, -26, -15, 41, -4, 9, -23, 37, -8, 19, 28, 24, -19, -19, -5, 9, 22, -7, -16, -19, -22, -12, 25, -10, -12, 34, -10, -14, 10, -4, 1, 21, -15, 19, 18, 25, 17, 6, 18, -24, 8, 19, 8, -6, 4, 8, -3, -33, -17, 28, -16, -3, 8, 19, -18, 54, -13, 4, 7, 13, 29, -6, -20, -14, 1, -2, 23, 7, -28, 25, 27, 29, 27, 39, -2, -19, -3, -7, 28, -14, -15, 22, -3, 19, -2, -17, 3, -8, -24, 27, -20, 17, -26, 15, 10, 36, 28, -8, -8, 28, 31, -6, -19, 0, -3, 21, 23, 25, 16, -5, 15, 13, 14, 36, -20, 13, 26, -44, 32, -15, -29, 27, 13, 38, -12, 16, 27, -14, 27, -16, -18, -19, -8, 6, -28, -2, -14, -23, -28, 25, 19, -1, 13, 27, -8, -7, 8, 1, -44, -18, 16, 31, 21, 27, -17, -3, -22, 14, 0, -26, 24, 21, 26, 6, 23, 10, 19, -14, -4, -7, -2, -4, 4, -9, 29, 26, -30, 19, 24, 9, -35, 22, -28, -3, -19, -18, -26, -10, -37, -12, -25, 
  -6, -11, 2, 4, 1, -4, -6, 14, 13, 20, -4, -7, 9, -1, 4, -10, -12, -13, -32, 3, -11, 20, -41, 9, -27, -27, -15, 24, -8, -22, -18, -29, -69, -20, 39, -16, -75, 21, -19, 25, -17, 2, 89, 33, 5, -3, 23, 12, -18, 35, 67, 4, 47, 26, -14, 8, -33, -7, 8, 19, -43, 6, -32, 24, 12, 17, -2, -7, -13, 2, -21, 5, 11, 11, 4, 16, 7, -15, -19, 14, 15, 7, 1, -24, 69, -6, -6, -24, -17, -12, 13, -18, -22, 12, -21, -42, 16, 13, 4, -7, -35, -16, 12, 10, 33, -30, -16, 15, 26, 1, 34, 7, 4, 14, 17, 22, 2, -32, -3, -35, 13, -19, -84, 21, 41, 7, -19, -41, -6, -3, 2, 23, -17, 26, 28, -22, 20, 38, 9, 31, 15, -26, -1, -9, 9, 14, 35, -5, 22, -8, -9, -19, 46, -37, -40, -16, 21, -9, 31, -39, -6, -30, -93, 21, -44, -12, -25, -45, -44, 5, 13, 28, -11, -7, 19, -25, -77, 20, -19, -29, -12, 7, -59, 10, -31, -13, -25, 9, -26, -19, -34, 5, 20, 6, -8, 23, -20, 2, -18, -13, -63, 5, 10, -18, -8, 7, 35, -26, -58, -3, 2, -12, -18, -2, 31, 17, 3, 44, 48, 15, 2, 31, 6, 35, 25, 25, 12, -5, 29, 15, -35, -13, -21, 27, -4, -15, -13, -19, -12, 14, -79, -20, 21, -28, -23, -16, 19, -20, 28, 24, 63, 41, 20, 16, -65, 47, -26, 0, 7, -18, 4, 0, 19, 19, 7, -10, -11, 3, 0, 10, -23, -14, -8, 15, 7, 20, -13, 0, -22, 11, 18, 20, 0, -16, 18, 21, 34, -25, -3, -18, -6, -22, 4, 32, 29, 21, -31, 5, -16, 33, -15, -12, 3, 16, -19, 26, 19, -7, -25, 11, -9, 25, 1, -12, -6, 31, 5, -13, -18, 14, 7, -18, -18, -4, 27, -22, -11, 23, 7, -12, 8, 11, 14, -6, -4, 30, -35, -10, -6, -20, 27, -9, 24, -27, -30, 4, -5, -6, 27, 20, 9, -2, 13, -24, -5, 16, -6, 32, 22, -22, 2, -26, 6, 12, -20, -22, 19, -26, 13, 24, 24, 19, -8, 28, -17, 4, 8, -21, 19, -6, 1, 9, 14, 25, -13, -13, -26, -8, 13, 6, -18, 5, 3, -13, 9, 7, -24, 3, 22, 2, 38, 3, 17, 3, 32, -3, -25, 31, -17, 10, -9, -5, -25, 8, 2, 30, 6, 18, -2, 25, 18, 7, -9, 16, -23, -27, -19, -8, 21, -4, -20, -8, -44, 11, -37, 13, -27, -10, 2, -28, -15, -13, -13, -11, 10, 2, 13, -19, -13, -14, 19, -21, 16, -10, 10, 2, -14, -16, 36, -24, 27, -15, 9, 7, 7, -1, 36, -14, 8, 19, 1, -6, 39, -19, 8, -23, -24, 17, -10, 8, 3, 32, 19, -7, -15, -13, -7, -12, -45, 2, -21, -17, 24, 7, 29, -11, 28, 1, -46, -18, 19, 20, 6, -10, 5, 11, -10, 18, -11, 31, 3, -26, -26, -8, 22, 10, -29, -15, -27, -15, 10, -1, -9, -20, -22, -6, 27, -5, 17, -23, -8, 23, -3, 11, 15, -6, -50, 17, -6, -11, 2, -10, -8, 26, 2, -12, -25, 23, 9, 24, -24, -20, -23, 10, 0, -15, -7, 17, 9, 2, -15, -15, 43, -18, -17, 19, 7, 12, 22, 31, 20, -25, -11, -28, 24, -1, -32, -5, -25, 10, -31, -14, 1, 9, -14, -24, -34, -8, 17, -17, 16, -20, -4, -12, -16, 18, -20, -19, 3, -11, -1, -19, -5, -17, 24, -3, 26, 3, -20, -22, 43, 1, -23, 24, 28, -5, -14, -2, 28, -11, -9, -10, -23, -1, 9, -7, -11, 26, -8, -23, 27, -22, 16, 2, 3, -17, 12, 20, -19, -5, 21, -23, -21, 0, -7, -9, 14, -7, -31, -13, -5, -9, -17, -1, -2, 17, -33, 30, 0, -6, 10, 24, -1, -7, -17, 21, -14, 15, -20, -2, 17, 7, 7, 22, -17, 18, -26, -28, -21, -16, 23, -16, 27, 0, -17, -25, 16, -16, -38, -7, 8, 11, -22, 7, -27, -7, -16, -15, -22, 3, 3, -14, 31, 21, 10, 11, -25, 10, -3, 14, 14, 6, -17, 31, 6, -4, -5, -6, -9, 5, 15, 23, 34, 14, 15, 22, -9, 7, -8, 21, -14, -16, 28, 28, -28, -4, 9, 26, -1, 28, -25, -6, -10, 16, -20, 3, 33, 24, 16, -24, 13, 19, 32, -14, -16, -9, 17, 27, 30, 13, -17, 25, -12, -27, 0, -10, -23, -9, -44, 0, -5, -21, 16, -10, 4, 11, 11, -27, -17, -6, -20, 14, 23, -6, -37, -20, 42, -19, 10, -20, -13, 27, 14, 19, -8, 29, -24, -23, 6, -14, -23, -14, 8, -10, -5, 6, -6, 18, 26, -21, 27, -15, 11, 4, -12, 7, -23, 10, 30, 9, -21, 29, -3, 15, -7, -18, -8, 16, -7, 18, -9, 28, 8, -13, -8, 2, 6, 12, 7, 6, -25, 5, 23, -20, 1, 4, -23, 21, 17, -1, 22, -4, 20, -1, -23, 16, 34, 2, -15, 9, 6, -16, -9, 1, -20, -10, 8, 11, 30, -15, -14, 17, -16, -18, 14, 15, 12, -13, 1, -25, -9, 19, 4, -24, 4, -22, 15, 28, 3, -20, -3, 17, 7, -3, -5, 18, 17, 14, 20, 21, 20, 14, 3, -15, -6, 28, 23, 17, -14, 15, -22, -11, 7, -9, -11, 21, 0, 2, 4, -16, -10, -6, -15, 18, -13, -15, -5, 18, -5, -15, -2, -19, -5, 31, 2, -25, 23, -9, 1, -15, -12, -18, 14, 27, -12, -20, -15, -24, -24, -8, 5, -7, 19, -18, 1, 23, -1, 11, 10, -25, -3, 1, 11, 9, -3, 5, -16, -13, 15, 13, -33, -12, -19, -25, 10, -12, -4, 3, -18, -18, -27, -23, -18, 27, -11, -17, 32, 0, -25, -9, -17, -12, 10, -19, 4, 28, -19, -19, -16, 17, -35, -7, 14, -28, -8, 29, -28, 15, 4, -15, 8, 13, 28, -20, 31, -12, -15, -22, 16, -3, 29, -11, -19, -11, 8, 7, 13, 33, 5, 19, -19, 22, -23, -9, 9, 15, -3, 31, 4, 8, 5, -2, 30, 13, -13, 27, 4, -18, -27, -17, 8, 2, -29, 10, -2, 10, -18, 22, -5, 4, 12, -4, -21, -7, -30, 19, 20, -22, 26, -13, 31, -16, 20, -16, 8, -27, 6, -6, -7, -5, -25, 4, 5, -4, -29, -13, 13, -14, 31, 15, -12, -8, -19, -16, -4, -19, -24, -3, -25, 14, -15, -3, -10, -24, -32, -20, 16, 24, 4, 23, -23, 10, -5, -22, -10, 28, -8, 23, -18, -3, 14, -15, 14, -20, 16, 2, 24, 18, 6, -18, 24, 18, 32, 20, -17, 14, -15, 12, -20, 8, 23, -16, -11, -10, -27, -18, 10, -13, -4, 24, -20, -9, 20, -17, 17, -13, -18, 30, 5, 7, 20, 23, 17, 21, -7, 31, 25, -21, -20, -7, 18, 15, 1, 9, -13, 0, -13, 1, 14, -4, -4, -22, -24, 28, 26, 27, 5, 29, 30, 3, 0, -19, 7, 3, -28, -11, 14, -9, 22, -15, -22, -9, 27, 31, 28, 15, -11, -12, 0, -6, -25, 14, 0, -17, -1, -18, -27, -11, 11, -11, 25, -5, 26, 23, -4, -8, 9, -29, 9, -18, -15, 15, 9, -15, 14, -15, -22, -26, -4, 8, -22, -10, -5, 15, 31, 2, 16, -4, -51, -23, 0, -13, -7, -14, 1, -3, -5, -16, 25, -1, 24, 3, 13, -8, -5, 12, 11, 2, -5, 22, -27, -3, -11, -1, -15, -10, 14, -26, -12, -6, 7, 8, 5, -9, -14, -11, 13, -26, -14, -23, -1, -9, -7, 10, 26, 9, -8, 26, -18, 20, 6, 4, 33, -24, -3, -2, 16, 20, -19, -22, -10, -11, 2, -14, 24, -22, -25, -23, -30, 2, -3, -4, -12, 22, -1, -25, 3, 3, -33, 27, -33, -29, 21, 6, -35, -17, 3, 4, 26, 26, 27, 17, -17, 23, -6, 22, -9, 24, 36, 21, 28, 14, -11, -19, -9, 5, 8, 29, 40, 21, 7, 9, 4, 1, 15, -7, 3, 26, -17, 19, 0, -25, -24, 20, 24, -11, -37, 28, -15, 18, -19, 15, -10, -23, 18, 20, -2, -11, -10, -16, -33, 4, -6, -10, -30, -2, -10, -1, -12, 9, -42, -23, -7, -25, -25, -14, 18, 16, -15, 3, -1, 11, -28, -7, -10, 20, -13, -25, -9, -6, 18, -27, 0, -3, 9, 13, -2, -27, 14, -8, -20, 10, -8, -16, 13, -14, -5, -10, -32, 19, 16, -21, -7, 7, 9, -1, -6, -6, 3, 20, -1, 4, -9, -37, -6, 31, 24, 2, 23, 6, 2, 13, -10, -16, -13, -14, 16, -13, -22, 12, 4, 16, 8, -21, -29, -2, -30, 23, -40, 22, 0, 22, -28, -25, 14, 4, -41, -26, 24, -2, 0, -10, 7, -6, 17, -22, -6, 10, -20, -17, -12, -16, -25, 34, 20, -27, 18, 7, 18, -9, -21, 20, -29, 20, 15, 23, 11, 6, 33, 20, -11, 5, 0, 24, -33, 26, -19, 27, -4, -13, 0, 32, -27, -21, -12, 8, -14, 26, 6, 23, -11, -26, 4, 9, -13, -3, 0, -7, 15, -32, 13, -26, -32, -10, -2, 14, -29, -8, -4, -20, 4, -26, -28, -3, 4, 30, -28, -24, -6, -19, 15, 10, -14, 20, -29, -7, -41, 32, 3, 15, -13, 20, 2, -16, 30, 15, 31, 13, -22, 8, -10, 34, -11, -15, -14, -24, -17, -18, -34, 28, 15, 30, -22, -27, -24, -19, -35, -4, -44, 30, -20, 12, 17, -8, -23, 34, -2, 2, 6, 29, 19, -17, -33, -6, -1, -13, 6, 25, 21, -25, 19, -19, 33, 26, -29, -17, 15, 6, 11, -5, 8, 22, -34, 9, -31, 41, -25, -8, -1, 25, 32, 10, -19, 22, -34, -16, -39, 31, 3, 2, 24, -24, 29, 1, 1, 13, -32, -18, -3, -4, 14, -20, 2, -15, -37, -10, -11, -14, 29, 27, -4, 5, 13, 28, -33, -24, 9, -22, 14, 7, -5, -1, -29, -24, 15, -22, -16, 31, -27, 18, -35, -18, 8, 23, -10, 6, 10, -25, -23, -32, -11, -5, -15, 29, -6, -10, -20, -4, -29, 31, -20, -8, -32, 15, 5, 32, 15, 0, 19, -4, -11, 6, -28, -31, -26, -12, -26, -19, 35, 28, -9, -12, -11, -9, -5, -27, 15, -12, -11, -6, -25, -25, -33, 24, 9, -12, -14, 27, 10, 21, 23, 9, 4, -26, 32, -4, -27, -23, -8, -25, 2, -20, -24, -19, -29, 4, -5, 27, -24, -9, -26, 0, 30, -10, -35, -28, -10, -7, 21, 19, 21, -8, -56, 17, -40, 16, 16, 11, 4, 22, -18, 21, -10, -16, -1, -23, -7, 13, -20, 25, 11, -29, 18, -16, -28, -17, -18, -24, 14, -15, 8, -19, 11, 7, 25, 29, 31, -20, -1, -15, 40, 18, -20, -2, -18, 9, -37, 7, 27, -13, 12, 29, -27, -13, -16, 25, -42, -17, 18, -6, 8, 24, -18, 5, 38, 21, 3, 23, -35, 24, 19, -4, -28, 20, -29, 31, 7, 32, 21, 13, -9, 14, 12, -14, -27, 21, -12, 18, 2, 27, 10, 19, -27, 17, 16, 21, 38, 28, -31, 4, 26, 32, -31, -5, -15, -5, -36, -23, 27, 0, 19, 13, 26, 4, 14, 6, 0, -8, 14, 14, -4, -21, 14, -14, 20, -18, -29, -14, 28, 12, -2, 21, 8, 11, -16, 1, -21, -20, 27, 11, -33, 13, 24, 5, -21, 21, -9, -20, 24, -19, -39, 26, -1, -5, 0, -15, -2, -22, 2, -25, -25, -18, 14, -17, -5, -3, -28, -16, 6, 26, -20, -11, -32, -16, -37, -15, -40, 17, -38, -25, 5, 4, -13, 35, 19, 22, -10, 33, 7, -25, 4, -8, -2, -11, -20, 5, -36, 2, 0, 2, 27, 8, 17, -13, -2, 13, -6, -9, -16, 6, -26, -10, 4, 0, -5, 18, -9, -27, -34, -8, -16, -16, -23, 17, 28, -8, -50, -8, 15, 17, -22, -7, -28, -21, 4, -11, 6, -23, 3, 16, 5, -15, 10, 15, 7, -4, -14, 0, 22, 29, -33, -12, -20, -18, 19, 16, -20, -25, -4, 31, -14, 20, -29, 4, -35, -9, -4, 25, 6, 0, -22, 37, 3, -8, 27, 21, 30, -5, -3, -9, -18, 31, -24, -12, -28, 20, 19, 21, 24, -26, -8, 29, -24, 24, -4, 4, 12, -23, -9, -17, 29, 19, -27, -34, 16, -16, -38, 22, -24, -24, -28, -9, 14, 14, 4, 25, 4, -26, 21, -5, -14, 5, -41, 30, -20, 19, 18, -24, -14, -4, -3, 13, -6, 24, -31, 19, 16, 3, 14, 2, 25, -20, -2, 27, -17, 1, -29, -13, -2, -4, -9, 32, -4, 20, -20, 33, -30, 27, 26, -13, -19, -7, -32, -13, 17, 5, -25, -10, -21, -15, -30, 6, 10, -4, 2, -8, -17, 33, 9, 5, 10, -28, -9, -9, -33, -11, 24, 16, -5, -5, -8, 35, -12, 8, -41, -3, -22, 8, 28, -32, -25, 13, -31, -27, -35, -11, 33, -22, -17, 15, 16, 10, -10, -18, -32, 14, 25, -12, -1, 31, 0, 4, -7, 31, -29, -16, -5, -24, -8, -3, -16, 1, -2, 14, -31, 15, -26, -5, -28, -6, 15, -21, 9, 25, -3, 22, 8, -28, 14, 27, -10, -10, 16, 8, 4, 2, 15, -25, -28, 17, -8, 15, -6, 24, -2, 16, 1, 27, 11, -17, -32, -23, -17, -12, 12, -19, 3, 10, 19, -22, -1, 8, 15, 7, -6, -15, -37, 0, 25, -8, -26, -9, -1, -20, -9, -7, 15, 4, 27, -13, -18, -21, -31, 21, -26, -12, -23, -26, 16, 27, -27, 20, 3, -8, 14, -14, -28, 31, -13, 27, 16, -16, 21, 2, -42, 22, -26, 19, 7, 20, 37, 1, -24, 32, 16, -2, -10, -15, -40, 15, -22, -19, -28, 22, 6, -4, -33, 0, 16, -15, -15, 20, 21, 26, 15, 17, -14, -17, -43, 22, 32, 22, -16, -9, -22, 6, -27, 31, -21, -7, -29, -22, -2, -22, 15, -2, 14, -4, 2, 8, -5, 9, 5, 9, -18, -19, 1, -9, -3, 31, -31, 11, -8, -22, -16, -5, 1, -23, 22, -4, 31, 30, 17, 31, -17, -26, -32, 0, -24, -22, -39, -7, -13, -23, -1, 0, 7, -27, -25, -2, -1, -5, -33, 14, 5, -2, -19, -24, 12, -1, -25, -30, 27, 29, -4, -1, -15, 11, -15, -23, 8, -24, -31, 32, 1, -6, -24, 4, -28, 27, -47, 22, 3, 28, -11, -20, 18, -27, 
  3, 14, 3, 3, -1, 13, -1, 9, 13, -8, -11, -7, -8, 8, 15, 7, -1, -30, 16, -22, 0, -31, -33, 14, 10, -14, 11, -6, -3, 12, 20, 28, -3, -9, 18, 7, 39, 23, 4, 19, -88, -18, -77, -2, -57, -27, 8, 15, -51, 13, 20, -32, -67, 25, 66, -4, 32, 12, 1, 59, 2, -13, -21, -17, 6, 18, 18, 1, -7, 13, -34, 13, 8, 36, 16, -5, -15, 10, 0, 6, -43, -27, 75, 2, -16, 10, 40, 18, 24, -15, 95, 28, 26, 11, -18, 5, 75, -5, -32, 12, 53, -24, -30, 9, -70, -49, -25, -36, -4, 5, -9, -32, 21, -13, 1, -29, -1, -26, -21, 20, -5, -97, 50, -24, 17, -27, -84, -44, 2, 0, -70, -24, -5, -19, -78, -32, -91, -4, -8, -50, -14, 14, -23, -48, -82, -51, -81, -47, -80, -35, 7, -39, -86, 10, -38, -2, -56, -24, -6, -23, -1, -20, 18, -19, 18, 12, -34, 13, -69, -4, -90, -9, 8, -6, -4, -33, 40, 7, -95, -4, -13, -37, -25, -27, 8, 5, 44, 9, -3, 5, 27, 20, 24, -6, 14, 26, 18, -4, -7, 16, -20, -6, 19, -12, 0, 17, 22, 22, 16, 18, 7, 21, 20, 5, -3, -7, -25, -3, -5, -13, 44, -5, -23, 22, 4, -5, 5, -19, -20, -6, -33, 8, -33, -20, -19, -28, -4, -33, -22, 14, -57, 14, 57, 2, -14, 23, 25, -7, 22, -11, 18, 7, -1, 0, -21, 17, -1, 2, 21, -18, 2, -12, 0, 11, -14, 5, 14, 2, 23, -19, -3, 31, 12, -1, 4, 6, 17, 26, -3, -23, 13, -24, 7, -12, -21, 31, 12, 4, 20, -16, -14, -2, 5, 16, 25, 16, -7, 3, 8, 16, -15, 16, 28, 3, -42, 9, 5, 9, 28, -17, 12, -7, 12, -26, 14, 14, -29, -19, -18, 13, 29, -24, 20, 19, -19, -20, 24, -14, 10, -21, -29, 20, -16, 8, -26, 5, 10, -21, 15, -22, 4, 3, 5, -8, -22, -22, 3, 26, 4, 25, 14, 20, -1, 15, 16, -15, 1, 13, 12, 7, -39, 13, -4, -1, 17, 17, -26, -19, 27, -23, -7, 13, -30, -3, 14, 16, -2, 17, -2, -12, -11, 28, -16, -13, -20, 13, -14, -15, 0, -12, 7, 17, -10, 0, 2, 10, -2, 22, 27, 7, -18, 17, -3, -8, -14, -5, -22, 25, -16, -13, 0, 17, 20, -17, 1, -22, -23, 19, -5, -24, 18, 10, 10, 20, 12, 24, 47, 23, 28, -18, 1, -23, 46, -14, -2, -6, -18, -10, -10, -6, -20, -23, -13, 11, 30, -24, 28, 7, -33, 26, -3, -4, 27, -25, 21, -18, -36, -20, 12, 7, -7, -29, 9, -5, -15, 22, 10, 6, -12, -15, -13, -12, 7, 22, 20, 7, -12, -13, 14, -14, -27, 4, -24, 23, -23, -11, -2, -26, -14, -25, -16, -23, -8, 12, -12, 33, -49, 24, -1, 28, 28, -8, -20, 4, -17, -4, -16, -23, 14, 26, -23, -20, -16, -8, 58, -22, 6, 17, 20, -16, 21, -19, 14, 12, -4, -11, 6, -16, -11, 11, 0, -3, 10, 16, -20, 8, 20, -25, -25, 11, 32, 27, 11, -13, 32, 2, -14, -14, 22, 5, 1, 20, -17, -20, 24, -24, 28, -1, 1, -17, -9, 18, -10, 31, 24, -27, -22, 28, -18, 1, -38, 4, -1, -29, 18, -21, -11, 18, -13, -12, 18, 5, 10, -7, -29, -15, 35, 11, 5, -14, 23, -24, 6, -1, 20, 11, 37, 7, -2, -8, -4, 14, -1, 8, 12, 21, 11, -7, 11, -3, 14, 2, 25, -8, 8, -10, -22, 7, -35, -10, -23, 11, 28, 3, -6, 3, 21, -7, 9, 16, -28, 10, -2, 10, -6, 1, 17, 26, -22, 17, 17, -4, 7, 10, 34, 14, -11, -3, -27, -18, 2, -10, 20, 20, 1, -8, -24, -7, 6, -13, 11, -28, 13, -3, -27, -21, 24, -26, 10, 9, 9, -6, 34, 7, 19, 31, -21, 18, 28, 2, -22, -9, 16, 14, 25, 24, 19, -26, 15, 32, -12, 20, -11, 20, 15, 18, 14, -14, 19, 5, 15, -22, 28, -19, 9, -3, -18, -26, 21, 15, 5, -17, 13, -25, -21, -13, 2, -7, 3, 2, -18, -22, -32, 13, 23, 9, 26, 25, 14, 10, -8, -8, 10, 23, -24, -8, -8, 13, 6, 7, -26, 32, -4, -11, -2, 19, -12, -13, -19, 1, -17, 2, -9, 7, 7, 26, 18, 11, 4, 0, 26, -19, -6, -6, -11, 31, 26, -21, 1, -19, -7, 5, 8, -20, 24, 23, -56, -10, -12, 28, -10, -15, 7, 23, -10, 1, -19, -16, 32, -10, -4, -21, -21, 26, 7, 7, -18, 23, -12, 20, -17, 4, 4, -16, -1, 8, -10, 33, -13, 16, 31, 7, -27, -10, -25, -3, -33, 27, 20, 9, 30, 29, -21, -12, 27, -24, -3, 4, 14, -7, -8, 4, 0, 9, -23, -12, -8, -26, -23, -13, -12, 9, 19, 34, -3, -16, 24, 3, -31, -23, 31, 8, -7, 21, 14, -12, 16, -22, -6, 24, -26, -17, 18, -13, -30, -22, -21, 6, 29, 0, 26, -14, 14, 12, -23, -2, 6, 18, 13, -5, 27, 7, -30, 29, 0, 25, -3, 0, -7, -9, -4, 16, -22, -3, 26, 33, -3, -4, 8, 21, -3, 1, -23, 29, -30, 31, 17, -2, -17, -25, 18, -25, -8, -2, -25, -7, 6, -18, 24, -3, -22, -1, -24, 9, -3, -6, 8, -23, -11, 8, 27, 16, -6, 18, 14, 18, 10, -20, 31, -24, 30, 9, -21, -9, 27, 10, 5, 20, -28, 14, 29, 23, -19, 3, -4, -8, 28, 15, 5, 30, -58, 2, -35, 15, -2, -22, -6, -2, 16, -16, 18, -12, 14, -27, 9, -22, -50, -23, -11, -22, -16, 19, -18, 2, 22, -23, 20, 27, 21, -2, 28, -8, -18, 8, -17, 12, 15, -13, -8, 2, -4, 5, 19, 7, -2, -19, -25, -23, 3, 12, 2, 8, 2, -9, -10, 2, -10, 2, -6, -6, -12, -24, 19, 14, 23, 20, 11, -24, -22, 10, 12, -3, 20, -23, 6, 6, 2, 9, 1, 12, -35, -10, -21, -22, 11, 26, 33, -2, -2, 29, 12, 28, -3, 15, 16, 17, -15, -12, 36, 20, 3, 8, -25, -17, 16, 1, 19, 11, 10, -23, -6, -3, -18, 22, -4, -10, 31, 3, 7, -5, 12, 9, 13, 32, -3, -17, -7, -6, -48, 26, 27, -19, -23, 9, -16, -21, -12, 4, -12, -26, -14, 20, 17, -2, -22, 31, 28, -20, 17, 27, 20, 6, 6, -3, 19, 2, 2, 11, -17, 23, 3, -5, -4, -25, 23, -3, 22, -15, 0, -22, 19, 10, 15, -16, 14, 2, -15, -9, -25, 5, 13, 2, 0, -5, 19, 5, 11, 22, 8, -19, -28, -24, -41, -5, -12, -30, -15, -18, 9, -9, 8, -19, -5, 18, -5, -22, 19, -24, -10, -10, 20, -6, 1, 28, -27, -1, 12, -5, 28, -27, 28, 15, 20, 31, -3, 12, 15, 2, -15, -15, 28, 29, -19, 20, 23, -10, 18, -19, 7, -26, -31, -19, -16, -13, 27, -27, -16, 30, 8, 25, -5, 20, 31, 6, -7, 11, -40, -3, 32, 27, -10, -3, 2, 29, 33, -25, 5, -7, -13, 18, -11, -7, 25, -4, -7, -22, 24, -20, 20, 0, -34, 18, 3, -17, 20, -18, 32, 6, 33, 29, 31, 20, 25, 14, -25, 7, -12, -2, 41, -28, -8, 33, -8, -16, -21, -9, 0, 18, 7, -22, -17, -15, -13, 4, 15, 15, -14, -19, 13, 26, -37, 29, 1, 8, 23, -9, -21, -17, -3, 19, 4, 29, 15, 30, -13, -14, 36, 9, 25, -21, -15, 17, 6, 11, -13, -25, 3, 13, -23, -20, 31, -21, -12, 31, 8, -14, 29, 17, -7, -27, 31, 18, -23, -15, 25, 7, 9, 13, 7, -6, -16, -13, 0, -20, -34, 9, -35, 15, -3, -24, -9, 26, -12, -8, 17, 0, 35, 7, -6, -11, 1, 17, -20, -1, 35, -13, 20, -12, 2, -5, -18, -15, -24, 27, 16, 21, -4, -21, 8, 27, -7, -26, 18, 26, 16, -27, 2, -4, 18, -23, -35, 28, -11, 20, 35, 14, 37, 21, 26, -2, 10, 17, -24, 18, 39, 29, -23, -20, -32, -7, -25, -20, -18, 12, 26, -16, 22, -27, 25, -7, -7, -1, -1, -16, -24, 24, -12, -22, -10, 21, 23, 28, -2, 0, 11, -15, -15, 32, -27, -7, -13, 14, -36, -8, 36, -11, -27, -21, -16, 33, 6, 8, -17, 27, 20, 21, -16, 10, 33, -16, 30, 4, 20, -10, -2, 33, 15, 18, 34, -26, 14, 30, 23, 20, -6, 5, -12, -23, -5, 15, 31, 19, 7, 8, 25, 9, -21, 15, 34, 15, -23, -6, -11, -16, -10, -25, 26, 8, 32, 14, 26, -9, -16, 17, 5, 3, 33, -18, -19, 23, 21, 6, 4, 12, -12, -4, 24, 0, -18, 19, -3, -13, -44, 23, 6, 14, -23, 32, 21, -24, -37, 2, -2, 32, -22, 22, -9, -6, 10, -24, 19, -21, 14, 20, 26, 6, 20, -26, -11, -26, 10, -5, -20, 16, -16, -26, 28, 18, -15, 24, -10, 33, 1, 27, 27, -13, 18, 20, -4, 23, -15, 16, -29, 14, 6, -19, 35, 11, 26, 12, -9, -16, 12, 25, 25, 14, -13, 27, -14, -8, 26, -17, -35, 33, -4, -27, 2, 23, 1, -30, -31, 26, -21, -9, 33, 28, -23, -4, 25, 3, -5, 24, -2, 1, -27, -15, 33, 30, 22, 24, -6, -28, -16, 12, -26, -10, -13, -7, 10, -1, -8, -24, 39, -26, -14, -12, -22, -12, -4, 23, 0, -22, 44, 5, 5, 20, 26, -17, -26, 4, 23, 4, 27, 19, -3, -11, 6, 7, 13, 10, -23, -1, -11, 13, -16, -7, 4, 12, 2, 23, -13, -8, -3, -26, -15, 18, 6, -17, 32, -4, -17, 19, -17, -16, 26, -15, 2, -23, 9, 12, 26, 2, 12, 16, 10, -4, -3, 13, 5, 21, 13, -1, 1, -7, 27, -3, -6, 6, -16, 6, 4, -18, -17, 20, -31, -3, -16, -15, 13, -17, 1, -21, 34, -8, 20, 31, 17, -4, -14, -2, 17, 18, 10, -9, -27, 18, 20, -14, -13, 21, -22, -3, -14, -31, 6, -8, -24, 7, 8, -22, 22, 15, -10, 25, 24, -20, -2, -18, 20, 30, -34, -28, 30, -20, -17, -14, -33, -1, -35, -19, -9, -14, 23, 9, 10, 20, 2, 13, -15, -25, -3, 6, 24, -5, -12, -27, 22, -9, 12, 32, -16, 40, -21, 28, 15, 2, 25, -10, 16, 37, 33, -9, 19, -8, -1, -15, 14, -22, 13, -9, 15, -1, 7, 23, 2, 12, 10, -17, -11, 9, -17, 23, 3, -22, 40, -17, -24, -10, 18, 22, -8, 7, -3, 27, 4, -11, -4, 11, -22, 10, 21, 24, 19, 31, 2, -5, 17, -3, -11, 29, -11, 17, 13, 21, -11, 4, 39, 5, -35, 5, -18, 31, -17, 15, -3, 8, 0, 7, -11, 16, 8, -1, -17, 12, -2, -19, -8, 21, 37, 9, 12, 26, -37, -26, 13, -10, -14, 9, -17, -3, 31, -12, -7, 20, 10, 31, -15, 32, -28, 25, 14, 22, 10, 13, -28, -9, 5, 28, -2, -22, 20, -13, 8, 14, 3, 23, 5, 5, -22, -14, 26, 5, 2, 27, 8, 20, 21, -18, 29, -25, -18, 15, 15, -26, 17, 19, -22, 6, -4, -13, 6, -16, -21, 15, 2, 17, -15, 31, -28, 10, 0, 16, -24, -20, 19, 25, 36, -10, -10, -31, -29, -5, 21, 23, 36, 0, 9, -15, -8, 9, -13, 16, 1, -2, -15, -13, -13, 9, 10, 27, -11, 22, 24, -31, -22, -13, -35, -23, 31, 13, 25, -20, -3, -20, -3, 23, 21, -6, -14, 11, -17, -14, -14, 31, 7, 21, 27, -30, 25, 9, 3, -24, -18, 4, -24, -16, -16, 1, -2, 32, 14, 18, -16, 10, 18, 29, 25, 7, -18, 17, 24, 1, -48, 13, 28, -8, 4, 25, -8, 15, -9, -13, -8, 22, -11, -5, 11, 33, 43, -2, 15, -25, 41, -10, -7, 2, 15, 27, 30, -4, -17, -8, -22, 34, 20, 5, -27, 0, 28, -21, -9, 5, 26, -13, -13, 7, -19, 31, 41, 25, -4, -11, 0, 13, -5, -28, 29, 12, 8, -7, 19, 30, 31, 28, -3, -15, -5, 11, -15, -4, -13, 9, 7, 6, 23, -9, 46, -4, -15, 16, 6, 35, 23, -19, -6, -3, -3, 14, -3, 34, -5, -8, 30, -10, -14, -13, 29, -17, 15, -24, -11, -23, 38, 0, 8, -12, -28, -25, 27, -23, -12, -8, 7, 1, -3, -27, -4, -18, 33, -2, -1, 19, 6, -17, -23, -3, 9, -21, 32, -5, -18, 8, -15, -11, -2, 23, -10, -14, -6, 10, 17, -18, -22, 9, 30, 5, -14, 33, -18, -2, 6, 24, -14, 14, -11, -12, 34, -17, -12, -16, 18, -7, -3, -25, -33, 18, 9, 2, 0, 20, -3, 11, -35, -12, -10, -19, -26, -29, 4, 5, -6, -10, 13, -16, 20, 24, 17, -15, 19, 30, 23, -6, 18, 27, 9, -10, -3, -26, -12, 32, 33, -25, -34, 3, -15, -2, -17, -3, 0, 24, 23, 20, 16, 16, 31, 32, -11, 38, 11, -2, 29, -24, 20, 13, 11, -8, 3, -4, -10, 5, 24, 17, 19, -1, 6, 27, 3, 26, -17, -2, -15, -14, 8, 14, -18, 26, -18, 28, -25, -1, -29, -3, 0, -27, 32, -29, 12, -18, 28, 9, -11, 6, -10, 18, 36, -21, 19, -23, 19, -20, 39, 1, -7, -27, 24, -22, 2, 30, -4, -1, 24, 9, -6, 15, -36, -14, 32, 6, 11, -4, -20, 3, -24, 28, 32, 6, -30, -12, 21, 4, -1, 17, 6, -15, -21, -15, -7, 10, -1, 9, 7, -22, 10, 14, 34, 23, 11, 9, 23, 0, -28, 17, 55, 3, 16, 33, -17, -14, 21, -25, 15, 15, 23, 20, 16, 32, 12, 10, -14, 24, 18, -14, -18, 31, 1, -11, 0, -11, -10, -11, 23, 18, -4, 0, 47, -19, -25, -5, 23, 8, -11, 30, -28, -22, 11, -27, -14, 8, 28, -26, -5, 0, -2, -25, 2, 27, -10, -2, -1, -6, 40, 10, 28, -15, 18, 43, -21, 8, -25, 12, 26, -27, 32, -16, 0, -12, 13, -19, -7, -21, 11, -7, 8, -12, 38, -5, 18, 1, 38, 30, -46, 21, -20, 4, -30, -12, -8, -19, -21, -7, -16, -1, -7, 21, -2, -2, -9, 26, 
  8, 13, -13, -5, 7, 3, 3, -11, 16, 0, -32, -16, -4, 5, 14, -12, 56, 7, 43, -17, 46, 7, -64, -6, 40, -10, -44, 16, 8, -1, 0, 4, 0, -33, -9, 3, -21, 3, -36, -24, -43, -4, -74, -29, -6, -20, 22, -11, 24, 2, -18, -27, -19, -54, -79, -40, -36, -44, 6, -64, -15, -12, 11, 18, 3, 4, 10, -19, -18, 10, 45, -14, 62, 30, 85, 23, 41, 30, -15, 13, 20, 14, 7, 12, -23, 17, 52, -4, 17, 15, -28, 26, 28, 11, 3, -12, -53, 36, 12, -6, 50, 0, 22, 35, 36, 44, -27, -5, 4, 8, -2, -11, -83, -3, 47, 7, -10, 46, 29, -21, -37, -74, 21, 13, -19, -51, -82, -12, -12, -17, -35, -49, 3, -17, -19, -36, -9, 39, 2, 25, 28, -29, -33, -27, -44, -23, 21, -9, -9, -5, -12, -4, 31, 25, 23, 9, -7, 10, -33, 13, 64, -29, -18, -6, 1, 4, -43, -34, -56, -36, -72, -23, -4, -32, -63, -18, -24, -59, -57, -65, -41, 0, -38, -31, 37, -15, 43, 13, 47, 25, 38, -8, -49, 29, 10, -15, 7, 10, 15, -13, -11, -11, 9, -12, 2, -5, 15, -4, 15, 36, 0, 22, -1, 4, 7, -15, 40, 0, 0, 2, 26, 28, 1, 2, -60, -10, 11, -1, 26, -7, 5, 24, 21, 9, 16, 31, 11, 10, 1, 20, -2, 7, -17, 6, 9, -2, 26, 4, -21, -2, -33, -35, -32, -20, 28, 31, 7, 21, 18, -2, -21, 10, -1, 28, -21, 28, 7, -16, 7, 25, 12, 14, -41, -17, -23, -17, 9, -14, -21, 19, -37, -17, -4, 0, 13, 27, 24, -10, 3, 0, -11, -21, 20, -19, 25, -12, -6, -1, -22, 22, -28, -13, -24, -17, 2, 15, -10, 27, 0, -13, 8, -3, 23, -14, 20, -23, 16, 31, -4, -11, 7, -25, -9, 18, -13, 18, -24, -16, 10, -14, 13, -3, -15, 12, -8, -9, 19, -11, 23, -23, 28, -22, -17, -11, 6, -21, -23, -26, -3, 1, 17, 17, -12, 22, -22, -2, 14, -25, 16, 11, 31, 7, -7, 0, 23, 6, 12, -18, -1, -12, -9, -6, -1, -11, 3, 20, -8, 11, 5, -23, -18, 3, 6, -1, 7, 12, 21, 1, -13, 9, -11, 30, 23, -27, 6, -13, -21, 2, -16, 21, 23, -4, -25, 28, -10, 27, 3, 29, 35, 5, -6, 8, -5, -23, 5, 7, -22, 18, 21, 1, -18, -8, 13, 28, -6, 6, 25, 0, 11, 28, -19, -3, -15, 22, -12, -9, 7, -10, -26, 5, 19, -24, 4, 5, -15, 11, 13, 8, -4, -9, -44, -28, -1, -6, 29, 24, 17, 19, 2, -8, -23, -14, -4, 9, -20, 12, -14, -6, 26, -29, -24, -19, 14, -18, 11, 18, 7, 0, -13, -5, 31, -10, 23, -7, -5, 20, -2, 25, -7, -10, 20, 4, -10, 25, -10, 0, 24, 10, 19, -6, 13, 2, 23, -10, 5, 16, 1, -12, 4, -5, 7, 6, -11, -16, -19, 6, 26, 6, 14, -7, -4, 5, -4, 8, 15, -26, -18, 21, 18, -6, 23, 29, -14, -4, 11, -7, 20, -15, 29, -9, -22, -4, -16, 30, -14, 15, 32, 10, -18, 18, -18, -26, 4, 14, 31, 34, -27, 29, 15, 25, -33, -17, -20, 1, -7, -3, 31, -20, -15, 22, 2, 14, 11, -8, 30, 8, 20, 28, 4, -22, 5, 19, 26, 23, -18, -25, -1, 22, -23, -1, -12, -25, 28, 27, 4, 9, 3, -26, -25, -15, -20, 0, 40, 20, -26, -10, -17, 11, 30, 18, 17, 35, -14, 15, -17, 31, 23, -9, -34, -2, 14, 26, 18, 11, -29, -28, -40, 23, 0, -8, -3, -15, -24, 0, -11, -6, 29, 2, -25, -16, 18, 17, 7, 8, -8, -14, -23, -16, 32, 26, -22, 19, 23, -22, 14, -12, 7, 17, -13, -9, 6, 12, -11, -9, 25, 3, 33, 19, 18, -24, -11, 19, -23, 16, 21, -13, -12, 29, 26, 27, -12, -24, 2, 28, 4, -3, 7, 22, -16, -7, 7, 20, -14, -4, -2, -9, -19, 13, 1, -19, -10, -26, 19, -7, -16, 18, 10, -1, -15, -23, 0, -19, -20, 10, 26, 20, -21, -12, 24, 9, 15, 8, -16, 0, 19, -18, -10, -7, 8, -19, -21, 13, 8, 27, 1, -2, 18, 18, -17, 9, -21, 15, 20, -24, -36, -8, 3, -22, -11, -16, 3, 5, -1, 11, -16, 14, 0, 10, 19, 12, 0, 28, -17, 27, -21, 28, 0, -25, -20, -20, -5, -19, -22, 4, -9, 16, -22, 25, 3, -24, -24, -15, -27, 11, -12, 1, -2, -25, 27, -20, 25, -3, 19, 28, 21, 6, -11, -21, -30, -20, -27, -9, 10, 9, -1, -28, -6, 14, 26, -6, -14, -16, -25, -13, -12, 13, 17, 18, -18, 19, -26, -6, 9, -6, 17, -5, -9, 17, -30, -13, 7, -19, 20, -8, -14, 2, -17, -25, 4, -19, 14, -1, -21, -24, 20, 20, 15, 3, -4, -20, 0, 8, -1, -20, 20, 2, -33, 12, 0, -7, -4, -14, 28, 11, 13, 25, -13, -27, 28, 12, 10, -16, 22, -14, 24, -21, 6, 24, -22, 13, 20, 14, 21, -23, 13, 7, -6, -27, -5, 4, -28, -24, 0, 5, 18, 7, 30, -16, 15, 29, -27, 4, -29, -16, 24, -13, 24, -18, -19, 4, -25, -2, 19, -1, -22, -20, -28, -24, 14, 13, -25, 2, 1, -2, -22, -1, 11, -19, -4, 25, 13, 15, 25, 27, 2, -1, -3, 8, 10, -28, 30, -14, -2, 14, -14, 14, -3, -15, -4, 5, 17, -20, -14, 9, -27, 22, 6, -23, 17, -5, 15, 8, -4, -20, -3, 3, -21, -8, -24, 6, 5, 25, 28, 3, -5, 29, -16, -18, -4, -19, 16, -4, -12, -21, -9, 16, 3, -1, -7, -3, 13, -4, -26, -15, -3, -27, 19, -3, 27, 23, 16, -6, 28, 20, -18, 16, -27, 7, -32, 8, 26, -27, -17, -20, 20, 29, 26, -16, 29, 9, 8, 7, 25, -4, -18, 0, 31, -20, -21, 26, -4, 27, -9, -6, 14, -12, 29, -25, 25, 27, 40, 5, 6, -2, 31, 2, -10, 14, -10, 16, 26, 25, 13, 27, -23, 1, -42, 13, 4, -19, -21, -28, 17, -24, -8, -14, 10, 19, -28, 9, -14, -23, -30, -10, -4, -15, -13, -18, 26, -26, -36, 10, -18, -30, 13, -27, -3, -25, 2, -13, 0, -9, 27, 17, 18, 26, -25, 25, 14, -6, 18, -17, 19, -26, 11, 3, 3, 3, -21, -2, 4, 4, 2, -23, -7, 31, -21, 29, 22, -12, -3, 11, -6, -11, -4, -23, -26, 10, -7, -4, 7, -4, 5, -19, -16, -23, 20, -8, 17, 21, -9, -25, -18, -24, -9, -6, 4, -27, -17, 0, -7, 5, 15, -20, 4, 25, -16, -2, 15, 0, -27, -3, 30, 15, 14, 6, 29, 19, 8, 5, -21, -5, -6, 10, -12, -19, 10, 15, -4, 3, 8, -9, -10, -4, -33, 4, -13, -6, 4, 23, 23, -21, -7, -14, 18, 7, 6, 7, 22, -6, -6, 27, 26, 3, 1, -16, 17, -9, -6, 27, 3, 13, -1, -8, 2, 7, -31, 11, -7, 13, 26, -5, 4, -13, 5, 21, -1, 7, -14, -24, 17, -18, 8, -11, -1, -5, -17, 25, -18, 13, -40, -1, -3, -21, -24, 5, 4, 11, -3, 9, -30, 13, -8, -15, 19, 21, 5, 5, -7, 26, 33, 29, 10, -2, 24, 7, -6, -27, 8, -10, -5, 25, -1, -2, -3, -20, -22, 11, 8, -4, 11, 21, 8, 8, -21, 19, -10, -8, -21, 16, -5, -10, 24, 5, -17, 0, -2, -10, 9, 16, 17, 11, 45, 6, 71, -18, 14, 22, 50, 11, -12, -7, 34, 8, 28, -14, 36, 16, 1, -17, 14, 5, 31, -12, 8, 15, -13, 9, 28, 31, -16, 14, 11, 6, 45, -28, 48, -27, -7, -20, 2, -21, -16, 12, 47, 4, 0, -17, 31, 24, 20, 27, 7, 19, 15, 2, 8, 12, 41, -3, 7, 0, 37, 29, 7, 15, 47, 3, 16, -27, 42, 9, 26, -18, 26, -14, 42, -24, 32, 9, 2, 15, -16, -9, 4, -12, 29, 9, 22, 1, 5, 0, 6, 18, 45, 17, 7, -10, -14, -15, 6, 26, 33, -5, 44, 16, -9, 28, 10, 13, 27, 26, 35, -27, 26, -10, 32, -4, 57, -18, 31, 16, 18, 6, 40, 9, 16, -11, 12, -9, 35, 5, 12, 9, -7, 8, 21, -17, 26, 0, 46, 28, 21, -15, -2, -16, 50, -19, -14, 8, 39, 24, 41, 29, -11, 9, 19, -28, -5, 17, -3, -17, 2, 13, 35, -23, 44, 6, 29, 1, 55, 3, -1, 22, 18, -23, 39, -16, 7, 19, 20, 31, -2, 16, 4, 7, -1, -4, 30, 9, 6, 20, 43, 29, -26, -17, 16, -27, -2, 21, 14, -16, 5, 23, -18, -27, 14, -1, 23, -16, 42, 6, -11, -9, 49, 29, 49, 9, -28, -1, 10, 23, 8, -21, 52, 23, -30, 1, 11, -22, 8, -7, -5, 29, -21, 15, 15, 13, 10, 31, 35, 11, 27, 7, 52, -22, 33, 5, 38, 20, -8, 2, 12, -8, 31, 7, 3, -10, 8, 19, -16, 9, 1, -24, -9, 15, 8, -21, 4, 11, 7, -11, 31, 0, -26, 8, 13, -4, 21, 18, -6, 12, -33, -15, 33, -24, 18, 20, 5, 9, 23, -18, 17, 28, 20, -11, 33, -20, -1, -12, 44, 28, 35, -19, -1, 20, 3, 33, 18, -25, 29, -4, -6, 13, 23, -26, 56, 15, -5, -10, 41, 17, 3, 15, 18, -21, -4, -9, -5, -2, -19, -23, 21, -27, 1, -5, -8, -1, 19, -23, 20, 5, 43, -12, 43, 3, 0, 26, 28, 5, 13, 14, 25, 10, -1, 2, 20, -17, 27, -23, -7, 1, 19, -13, 10, 4, 21, -13, 4, 11, 15, 7, 10, 22, 2, -24, 3, 5, -26, 32, 51, -26, 39, -22, 23, -20, 13, 25, -17, 26, -6, 4, 19, 2, 18, 2, 0, 0, 29, 16, 25, -14, 18, -16, 3, 24, 16, 24, -9, 33, 9, 14, 20, -12, -3, 16, 30, -14, 24, 15, 42, 28, 22, -29, 5, -11, -21, 14, 3, 19, 16, 17, 0, 19, 37, 0, 9, 25, 27, 11, 12, -1, 34, 26, 41, -14, 8, 18, -5, -9, 35, 33, -5, 24, 10, -23, 35, 1, 8, 5, 37, -19, 35, 12, 40, -36, 12, -9, 11, 0, -7, -11, -11, 6, 3, -12, -5, 31, 0, -25, 29, -31, 15, -14, 45, 20, 26, -15, 20, -22, -2, 2, 46, -17, 31, -29, 23, -12, -3, 33, 34, -26, 0, 15, 35, -23, -14, 27, 43, -18, 34, -23, 24, 18, 24, -12, 13, 24, 24, 16, 36, -8, 19, -13, 11, -16, 32, 9, 22, -25, 25, -2, 12, -17, 7, -22, 24, -4, -31, 17, 35, -18, 40, 14, 45, -11, 22, -21, 2, -5, 7, -1, 24, 28, 6, -4, 3, 0, 0, 23, -4, 17, -10, -20, 31, -9, 17, -10, -12, 10, -5, -19, -8, 25, 49, 9, 37, -2, -16, 24, -1, 5, 5, -14, 5, 4, -8, 16, 6, -13, 17, 20, 19, 27, 15, 14, 14, -23, 58, 9, 35, -16, 17, 3, 22, 9, 2, -21, 16, -10, -22, -2, 15, -19, 26, -20, 1, -12, 20, -3, 65, -1, 1, 31, 14, 30, 17, 10, 26, -2, 54, 17, -9, 16, -14, 28, 12, 30, 52, 17, 30, 21, 26, 3, 2, 29, 2, -27, 8, -20, 17, -3, 0, -21, 4, 32, 42, -17, -1, 9, 10, 2, 17, 20, 53, 8, 0, 31, 25, -9, -12, -29, 41, 28, 32, -24, 30, 12, 17, -6, 45, 29, -42, 4, 57, -3, 37, -2, 22, -17, -8, -2, 34, 17, 12, -15, 42, 12, 47, -23, 43, 16, 49, 0, 40, 1, 28, -1, 35, 9, 11, 19, 35, -1, -8, -10, 43, -20, 35, -10, 25, 17, 39, -10, 4, 23, 5, 29, 18, -26, 23, -1, 17, -27, 22, -4, 33, 9, -20, -8, 57, -15, 41, 19, -3, -7, -27, 14, 26, 17, 50, 20, 4, -24, -15, -2, -2, 5, 38, 17, -10, -17, -1, -18, 2, 23, 31, -23, 5, 13, -8, -13, 30, -1, 5, -30, -9, -9, -3, 32, 32, -17, 3, -7, -9, 0, 25, 30, 5, -10, 2, -25, 21, 10, 15, 0, 31, 31, 20, 0, 1, -3, 3, -4, 29, -11, 2, -2, 21, 5, 15, 12, -7, -26, -1, -1, 8, 6, 15, 7, 12, -5, 8, 24, 32, 24, 29, 9, 24, 30, 1, 11, -14, -8, 38, 2, 39, -27, 41, 7, 23, -7, 35, 24, 30, -3, 6, 17, 4, -25, 29, 3, 3, 29, 29, -7, 16, 6, 5, -8, 59, 7, 40, -7, 1, -7, 12, 1, 25, 31, 10, -14, 23, 16, 19, 2, 45, 21, 32, 20, 20, -21, -22, -15, 2, 12, 39, 10, 36, 7, -17, -4, 15, -11, 35, -28, 23, 31, 36, 31, -25, 29, 45, 8, 2, -7, 43, 28, 37, 26, 47, 8, 5, -22, 29, 4, 8, 1, 26, 11, 29, -18, 1, 25, 12, -11, 16, 4, 43, 27, 21, 6, 27, -26, 8, -27, 1, 0, -18, -9, 15, 8, 21, -2, 43, -11, 18, -23, 22, 6, 5, -7, 12, 29, 15, 1, 21, 28, 44, 5, 6, -13, -13, 2, 6, 24, 29, -6, 27, 25, -21, 16, -9, 30, 33, -7, 30, -4, 7, -27, 51, 20, 20, 5, 20, -26, -13, -28, -5, -9, 18, 30, 8, -10, 5, 19, 27, 10, -15, 30, 0, 26, -9, -17, 30, -28, -5, 10, -4, -28, 40, 20, 35, 32, 47, 15, 53, 17, 13, 8, 24, -15, 14, 11, 45, 4, 52, -21, -14, -12, 30, 3, 28, 14, 18, -17, 36, 18, 8, 20, -12, -11, 26, -28, 38, 15, 29, 29, 26, 15, 48, 5, 13, -8, 24, -15, 39, 30, -6, -28, 5, -13, 15, 24, 40, -9, 34, 2, -17, 7, 18, -6, 28, -31, -1, 14, -1, -18, 42, 24, 5, -7, 8, -6, 41, 12, 16, -25, 35, -17, 1, 23, 18, 23, 3, 18, -8, -5, -1, 4, 36, 11, 23, 28, 52, -15, -4, -23, -6, 33, 20, 17, 45, 7, -22, 29, 3, -10, -10, -8, 5, 21, -25, -8, -1, -22, 0, 14, 39, 10, -11, 27, -1, 15, 55, -1, 47, -17, 5, 23, -4, -30, -10, 29, 2, 27, 15, -1, 
  -34, 12, 0, -3, -1, -17, -7, 5, 12, 16, 3, 12, -2, 19, 29, 17, 22, 1, 35, 4, -24, -6, -26, -14, -7, 29, 41, 27, -12, 34, -3, 23, 27, 17, 18, -26, -15, -3, 16, 32, 43, 5, -24, 25, 21, 7, -6, 22, -2, 25, -13, -5, 21, 17, -25, -12, 30, 33, 4, 12, 5, -7, 17, -26, 21, 29, 7, -5, 29, -8, -19, 1, -19, 29, 33, -3, -21, -3, -9, 18, -26, 10, 12, -15, 29, 5, -32, -9, -76, 29, -34, 34, -35, -23, -5, 21, -31, -10, 41, -13, 30, -1, 3, 14, -18, -18, 55, 11, -11, 8, 39, 33, -2, 33, 53, -20, 5, -26, -20, 9, 6, -7, 17, -19, -3, -45, -26, 4, -5, -29, -5, 21, 38, 7, -6, 9, -24, 13, -47, -15, -21, -14, 3, -18, -40, 15, -34, -18, -57, -25, -8, -33, -18, -25, -43, 19, -53, 29, 12, -18, -70, 6, -13, 3, 7, 18, 5, -31, 19, -21, 10, 7, 25, -7, -2, -18, 12, 7, 11, -14, -28, -18, -25, 21, -57, -2, -40, -32, -41, -17, -13, 6, 8, -5, -16, 26, 6, 3, -7, 18, -2, 15, -13, 6, -12, 7, -25, 17, -13, -21, 7, 1, -37, 1, 29, 1, 62, 20, -1, 9, -15, -3, 21, 27, -8, 10, -8, -20, 31, 29, -5, -5, 5, -8, 5, 27, 9, 7, 32, 7, -51, -7, 20, -14, -3, -16, -10, 21, -7, 38, 20, 8, 35, -14, -2, 32, -15, -13, -22, -10, 28, -20, -32, -28, 6, -19, 3, 12, 15, 23, 23, -3, -27, 7, -32, -23, 16, 18, 4, 10, 4, -27, 6, -11, 25, -8, -33, -25, -19, 3, 25, -11, 26, 12, 13, 26, -39, -27, -33, 2, 22, 18, 25, -17, -14, 26, 25, 1, -10, 11, -22, -17, -9, 26, 29, -16, -28, -25, -19, -8, -33, -21, -15, 10, -27, 7, 10, -30, 12, -12, -9, -17, -28, 9, 12, -28, -25, -24, 21, 14, -7, -29, -5, -13, -5, -14, -14, -32, -25, 12, 24, 12, 0, 16, 0, 22, 8, 13, 15, 11, -1, -9, -25, -32, -22, 13, 11, 26, -19, -24, -24, -29, 2, 22, -9, -2, -33, -15, 22, 23, -1, -19, 10, 21, -3, 3, -21, 27, -1, 13, -27, 1, 11, 25, -8, 15, 2, -31, 16, -5, 6, 21, -9, -4, -9, 0, 23, 3, -36, -4, 23, 18, -12, -28, -22, 24, -28, -30, -24, -29, 26, 8, -6, -19, 1, -23, 10, -2, -16, -27, -14, 17, -42, -16, 32, -14, -19, -15, 28, -28, 4, -18, 27, 11, -12, -24, 20, 2, 24, 12, -21, -29, 21, -20, -9, -19, -13, 18, 15, 10, -18, 10, -17, -31, 2, -24, -21, -5, 12, 1, -13, 23, -3, 6, -9, 11, -15, 21, 14, -13, -26, -30, -11, 1, -4, 26, -4, -33, -1, 13, 11, -26, -8, -13, 25, 7, -12, 17, 2, -13, 2, -8, 10, -5, 0, 5, -5, -29, -15, 21, -19, 9, 9, -14, -5, 26, 9, -34, -9, 0, -1, -25, -23, -33, -27, -28, -21, 26, -8, 26, -10, -16, 15, 18, -8, -9, 4, -20, -28, 1, 12, -26, -23, 0, -25, 2, 34, 0, 15, -27, 17, -14, -4, -19, -35, 19, 5, 10, 3, 8, -54, 19, -55, 6, 15, -5, -31, 3, 0, 15, 11, -1, 7, -18, -15, 24, 29, 17, -10, 8, -32, -5, 28, 18, 47, 21, -33, 2, 6, 11, 17, -25, -4, 3, -3, -17, 21, 15, 8, -18, -59, -24, 8, -12, -26, -21, 5, 20, -72, -29, 6, -29, 27, 3, 18, -31, -21, 12, 0, -25, -4, 25, -32, 21, -13, -21, 11, 7, -29, -23, -27, 9, -2, -9, -12, -5, -29, 20, 5, 18, 0, -30, 12, 3, -22, -16, -9, -7, -24, 1, 12, -11, -31, 27, -18, -18, 1, 23, -11, -13, -25, 0, -23, 4, -17, 24, -7, 11, 28, -27, -29, -29, -4, -31, 20, -9, 3, 10, -7, 8, -3, 19, 21, 22, 3, 8, 9, -14, -1, 5, -11, -17, -13, 2, 10, 15, 5, -18, -14, -25, -29, 0, 19, -2, -15, -4, 10, -12, -25, -2, 17, -13, 25, 1, 14, 2, -30, -20, 6, 25, 2, 18, -27, 23, 10, -29, 28, -7, 3, 20, 5, 12, 11, -33, -9, -15, -17, 19, -16, -33, 4, 14, 25, 27, -10, 18, 12, 23, -3, 27, -11, -4, -3, 16, 17, -19, 9, -33, -7, 9, 26, -8, -9, -15, 1, 17, 20, 12, 9, -8, 19, -12, 9, 14, -17, -32, 4, -17, 19, 24, 4, 8, 5, 2, -11, 3, -18, 18, 26, 7, -15, -30, -25, 16, 5, -23, 10, 11, 8, 6, -21, -30, -19, -13, -17, -7, 18, -1, -49, 23, -15, -21, -11, -12, -2, 14, 5, -6, 10, -26, -31, 14, -6, -29, -19, -32, -3, 5, 24, -11, -29, 17, -42, 0, -16, 10, -25, 1, -3, 5, 15, 5, -18, -20, 9, -21, 9, 8, -42, 14, 21, -17, -10, -8, -26, 26, 5, 26, -14, -5, 6, 6, -8, -1, 19, 10, -19, -28, 20, 16, 15, 18, -8, 5, 21, 19, 9, 18, -1, -24, -4, 12, -5, -19, -29, 6, 14, -16, 9, -33, 10, -15, 11, 15, 27, 8, 4, -31, -9, 2, -32, -31, 2, 16, -23, -12, 34, 10, 25, -10, 4, 12, -17, -2, 18, 21, 29, 17, 12, 19, 10, -32, -31, -13, 16, -32, 24, -25, 24, 8, 25, 1, 25, -20, 7, -15, -26, -2, 22, 10, 15, -21, 7, -26, -47, -25, 9, 22, -26, -29, -18, -33, -4, -24, 15, -18, 22, -21, -17, -26, -30, -12, 31, 6, -22, -22, -29, 4, -8, -18, 1, -7, -13, -15, -24, -2, 13, -14, -29, 11, 17, -26, -16, -17, -51, -21, -23, 2, -14, -31, -12, 10, 25, 11, 2, -14, -10, -16, -23, -14, 11, 24, -2, 19, -3, 21, 22, 6, -11, -31, -21, -28, 27, 10, 1, 10, 20, -25, 6, -19, 8, 1, -6, -33, 17, 3, -1, -3, 1, -19, -3, -16, -21, 17, -22, -24, -16, -9, -25, 13, 17, -28, -25, -8, -6, 28, -17, -30, 14, 3, -24, -13, 29, -20, -14, -10, -23, 25, 11, -12, 21, 28, 9, -10, -7, -23, 8, 28, 4, 2, 17, 24, -14, -10, 23, 24, -29, 18, -26, -24, -39, -22, 7, -3, 4, 21, -29, -19, -6, 6, -24, -27, -30, 18, 22, 23, 6, -20, -28, -29, -26, 1, 14, 24, 0, 13, -20, -8, -28, 4, 23, -12, -10, -11, 14, -2, 6, 27, -29, -20, -24, -8, 1, 19, 14, 2, -2, 7, -11, -22, -1, 12, -13, -33, 14, -17, 12, -25, 2, -18, -11, 23, -13, 12, 11, -21, 4, 10, 24, 21, -31, -31, 12, 11, 11, 3, -13, -8, 1, -3, -4, 27, 18, -11, 15, -3, 8, 28, -39, -10, -6, 2, -18, 24, 11, -32, -10, -27, -1, 24, -20, -16, -22, 1, 5, -3, 27, -24, -7, -7, 17, -16, 11, -28, 18, -22, -24, 22, 2, -25, -24, -2, 18, 17, -27, 26, 22, -8, 7, -20, 4, 14, -7, -7, 21, -24, -42, 7, 15, 6, 14, -21, 24, 18, 2, 3, -10, 10, 15, -2, -22, -24, -5, -5, 8, 4, -11, 6, -10, -7, 20, 21, 11, 16, -10, -23, -1, 14, 2, -32, 11, -8, 24, -9, -33, 11, 4, 24, -24, 21, -29, 29, 20, -22, 16, 26, 4, -3, -6, 3, 15, 5, -41, 9, 16, 4, 10, -18, 11, -17, -3, -11, -26, -35, -11, -9, -18, 0, 15, -33, 11, 25, -25, 2, 23, 7, -39, 28, -56, -32, -17, 9, 4, 28, -1, -31, -18, -28, -37, 22, 15, 8, -11, 25, -57, 21, -24, 0, 16, 4, -41, -22, -22, -8, -40, 7, -3, 5, -6, -16, -66, 21, -37, 19, -23, -25, -66, 6, -62, 13, -43, -16, 22, -13, -18, -20, -33, -32, -43, -1, -5, 23, -25, 6, -45, -12, -33, -27, 8, -8, -29, -15, -62, 19, -42, -13, -20, 2, -50, 6, -16, -14, -16, -31, -14, 3, -58, 8, -40, -27, -47, -1, 15, -16, -23, -18, -76, 13, -22, 9, 29, 1, -16, 5, -41, -6, -46, 1, 20, 26, 0, -18, -69, -20, -18, -3, -29, 6, -20, 13, -66, -2, -44, -24, -16, -12, -38, -22, -62, 9, -32, 17, 11, 15, -9, -26, -34, -7, -16, 19, -19, 19, -47, -16, -43, -23, -49, 17, -10, -9, -66, 26, -62, 19, -55, -8, 12, -25, -12, 12, -43, 5, -17, 23, 12, -23, -47, 0, -69, -19, -51, -14, 25, -13, -37, 25, -76, 18, -51, 17, -15, 22, -51, 3, -50, 20, -59, 28, 6, -25, -72, 17, -44, -30, -26, 9, -10, 1, -19, 18, -63, -27, -35, 1, -4, 17, -11, 21, -50, 12, -50, -30, 22, 16, -17, -24, -44, 0, -34, 14, -6, -1, -9, -2, -60, 7, -30, 1, 24, 9, -25, 20, -67, -3, -31, -26, 25, -4, -62, 19, -52, -13, -70, 23, -22, -20, -44, 1, -34, 16, -69, 19, -10, -18, -8, 23, -74, 8, -10, 28, -14, 13, -20, -3, -29, -23, -40, -16, 19, -26, -29, 8, -59, 29, -9, 8, -29, 1, -43, 13, -43, 7, -27, 23, 15, -19, -64, -2, -71, 0, -44, -33, -33, -33, -53, -3, -67, -8, -10, -24, 6, -23, -81, -30, -59, -20, -2, 5, 18, -20, -53, 10, -53, 13, -48, -22, -20, -25, -57, 4, -47, 12, -27, 24, -28, 7, -27, 14, -45, 19, -26, 29, -38, 27, -37, -23, -43, 22, -72, 18, 4, 3, -41, 1, -70, -11, -62, -26, 10, -19, -35, -20, -28, -30, -22, 6, 31, 28, 0, -8, -33, -9, -66, -22, 7, 10, -23, 10, -54, -4, -46, -12, -30, 5, -68, -19, -51, 26, -43, 15, -12, -21, -31, -30, -46, -7, -40, -26, -6, 3, 10, 22, -51, -30, -45, -23, 4, 2, -59, 1, -37, -18, -29, 27, 6, 5, -61, -3, -34, 9, -25, -12, -13, -27, -17, -26, -41, 6, -48, 25, -13, -18, -8, 2, -28, -1, -65, -4, -6, -19, -20, 19, -69, -33, -34, 23, -2, -21, -34, -29, -13, -25, -69, -1, -24, -1, -27, -32, -31, 7, -20, 6, 3, 22, -11, -22, -52, -10, -58, -6, -41, -26, -21, -29, -71, 19, -23, -27, 7, -19, -62, -20, -20, -28, -9, -8, -18, -12, -12, 13, -69, -2, -63, -29, 20, -7, -21, 27, -59, -4, -56, 23, 33, -33, -22, 3, -54, -17, -70, -10, 22, 4, -33, 3, -24, -10, -59, -11, -9, 19, -15, -8, -34, -9, -50, -13, 17, 21, -57, 13, -62, 29, -15, -9, 22, -5, -6, 12, -64, -3, -59, 28, -3, 17, -61, -32, -33, 14, -51, 8, 5, 9, -20, 26, -20, -32, -10, -9, 27, -29, -69, 6, -44, -29, -20, 12, -5, -29, -63, -10, -50, 11, -62, -3, 7, 24, -30, 27, -14, -30, -3, 20, -20, -19, -52, -24, -61, 18, -77, 21, 10, -10, -50, -13, -25, -4, -63, -25, -24, -33, -7, 0, -65, 6, -41, -23, 8, 7, -22, 24, -64, -7, -34, -24, 23, 24, -39, 10, -38, 4, -10, 15, -19, -24, -36, 2, -17, 10, -29, -7, 11, 13, -62, -15, -35, -16, -40, -8, -34, -14, -54, -6, -69, -19, -51, 28, -25, 19, -82, 2, -18, -17, -51, 16, -17, 15, -71, -24, -69, -11, -50, -12, 21, 8, -55, -2, -56, 6, -19, 11, -17, 27, -1, 6, -63, 26, -5, -20, 22, -5, -31, -7, -1, 18, -69, 27, 9, 10, -17, -8, -63, -9, -69, 6, -10, 24, -63, -31, -18, 16, -9, -29, -25, 8, -38, -31, -43, 1, -47, 26, -38, -26, -47, 17, -11, 21, -24, -3, 12, 26, -72, 17, -17, 18, -51, -13, -19, 19, -4, -6, -43, 9, -46, 6, -20, -7, -52, -30, -30, 2, -49, -26, -4, -24, -21, -25, -53, -16, -16, 27, -21, -18, -29, 6, -63, 17, -66, 15, -22, -10, -55, 14, -27, -12, -40, 1, -23, 19, -42, 3, -56, 18, -37, -6, -29, 1, -49, -23, -9, 4, -33, 7, -25, 13, -41, 11, -46, 15, -54, 14, 25, 18, -68, 16, -29, -24, -28, -9, -21, 26, -21, 26, -18, -7, -80, 12, -47, -23, -39, -24, -28, -9, -27, -1, -39, 0, -47, -6, -57, -11, -29, 19, 19, 22, -17, -2, -44, -2, -38, 8, 5, -22, -41, 22, -27, -17, -45, -26, -42, -32, -42, 4, -24, -28, -56, 14, -27, -28, -67, -1, -67, -31, -29, 29, -31, 24, -76, -19, -40, 15, -14, 0, 26, -22, -56, 11, -32, -9, -48, -31, 17, -32, -56, 8, -19, 15, -20, 22, -19, -27, -47, 2, -18, -11, -18, -16, 23, -30, -70, 12, -76, -2, -60, -17, 11, 8, -14, -25, -52, 13, -42, 25, -17, 11, -57, 11, -38, 5, -50, 18, 5, 25, -8, 24, -60, -28, -39, -27, -23, -29, -14, -1, -73, -20, -18, -3, -15, -30, -67, -10, -73, 13, -14, -30, -30, -6, -57, 27, -34, -19, -51, 24, -20, -18, -17, -1, -48, -7, -11, 9, -16, -11, -26, 22, -65, -25, -62, 20, -10, 14, -35, -24, -46, -7, -23, 18, -15, -27, -27, 7, -56, -11, -28, -17, 28, -9, -9, -20, -14, -27, -15, 1, -2, -19, -18, 10, -48, -1, -10, -7, -18, -2, -40, -26, -79, -1, -28, -22, 6, 21, -5, 19, -54, -8, -49, 7, -9, 22, -69, 25, -20, 21, -22, -13, 5, 28, -18, -32, -23, 3, -51, 21, -12, -32, -70, 16, -44, -2, -40, -4, -3, -30, -64, 24, -62, -1, -64, 8, 1, -6, -19, -27, -65, 29, -56, -2, -18, 25, -20, -2, -64, 9, -7, 25, -38, 12, -31, 8, -29, 21, -48, -5, -46, 17, -72, 10, -60, -13, -30, -27, 19, 22, -24, -5, -66, 16, -35, 5, -22, -16, -62, -4, -21, 23, -69, 16, 23, 21, -67, -4, -63, -15, -26, 7, 12, -33, -25, -11, -55, -10, -64, -29, -27, 7, -74, 17, -22, 28, -6, 12, -22, -7, -13, 12, -43, -18, -43, 19, 20, -8, -24, -8, -16, 2, -63, 4, -28, -25, -41, -11, -65, -1, -55, 15, -28, 17, -18, -4, -32, 20, -23, 3, 17, 14, -36, 8, -18, 28, -64, -29, -8, 16, -55, -7, -37, 12, -31, -23, -38, 20, -58, 29, -25, -29, -59, -30, -25, -7, 
};
const TfArray<2, int> tensor_dimension7 = { 2, { 7,2448 } };
const TfArray<1, float> quant7_scale = { 1, { 0.0015972441760823131, } };
const TfArray<1, int> quant7_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const ALIGN(16) int32_t tensor_data8[7] = { -2, 0, 4, 0, 4, 8, -10, };
const TfArray<1, int> tensor_dimension8 = { 1, { 7 } };
const TfArray<1, float> quant8_scale = { 1, { 0.0022412375546991825, } };
const TfArray<1, int> quant8_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<4, int> tensor_dimension9 = { 4, { 1,1221,4,1 } };
const TfArray<1, float> quant9_scale = { 1, { 10.336968421936035, } };
const TfArray<1, int> quant9_zero = { 1, { -126 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<4, int> tensor_dimension10 = { 4, { 1,1221,4,16 } };
const TfArray<1, float> quant10_scale = { 1, { 2.2257001399993896, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfArray<4, int> tensor_dimension11 = { 4, { 1,611,2,16 } };
const TfArray<1, float> quant11_scale = { 1, { 2.2257001399993896, } };
const TfArray<1, int> quant11_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const TfArray<4, int> tensor_dimension12 = { 4, { 1,611,2,8 } };
const TfArray<1, float> quant12_scale = { 1, { 1.4031903743743896, } };
const TfArray<1, int> quant12_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const TfArray<4, int> tensor_dimension13 = { 4, { 1,306,1,8 } };
const TfArray<1, float> quant13_scale = { 1, { 1.4031903743743896, } };
const TfArray<1, int> quant13_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<2, int> tensor_dimension14 = { 2, { 1,2448 } };
const TfArray<1, float> quant14_scale = { 1, { 1.4031903743743896, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const TfArray<2, int> tensor_dimension15 = { 2, { 1,7 } };
const TfArray<1, float> quant15_scale = { 1, { 0.26269131898880005, } };
const TfArray<1, int> quant15_zero = { 1, { 19 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const TfArray<2, int> tensor_dimension16 = { 2, { 1,7 } };
const TfArray<1, float> quant16_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant16_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const TfLiteReshapeParams opdata0 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs0 = { 2, { 0,1 } };
const TfArray<1, int> outputs0 = { 1, { 9 } };
const TfLiteConvParams opdata1 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs1 = { 3, { 9,3,4 } };
const TfArray<1, int> outputs1 = { 1, { 10 } };
const TfLitePoolParams opdata2 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs2 = { 1, { 10 } };
const TfArray<1, int> outputs2 = { 1, { 11 } };
const TfLiteConvParams opdata3 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs3 = { 3, { 11,5,6 } };
const TfArray<1, int> outputs3 = { 1, { 12 } };
const TfLitePoolParams opdata4 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs4 = { 1, { 12 } };
const TfArray<1, int> outputs4 = { 1, { 13 } };
const TfLiteReshapeParams opdata5 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs5 = { 2, { 13,2 } };
const TfArray<1, int> outputs5 = { 1, { 14 } };
const TfLiteFullyConnectedParams opdata6 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs6 = { 3, { 14,7,8 } };
const TfArray<1, int> outputs6 = { 1, { 15 } };
const TfLiteSoftmaxParams opdata7 = { 1 };
const TfArray<1, int> inputs7 = { 1, { 15 } };
const TfArray<1, int> outputs7 = { 1, { 16 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension0, 4884, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 16, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 8, {kTfLiteNoQuantization, nullptr}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 144, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 1152, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 32, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data7, (TfLiteIntArray*)&tensor_dimension7, 17136, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data8, (TfLiteIntArray*)&tensor_dimension8, 28, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 78144, (TfLiteIntArray*)&tensor_dimension9, 4884, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension10, 78144, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 78144, (TfLiteIntArray*)&tensor_dimension11, 19552, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant11))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension12, 9776, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant12))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 9776, (TfLiteIntArray*)&tensor_dimension13, 2448, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant13))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension14, 2448, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant14))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 2448, (TfLiteIntArray*)&tensor_dimension15, 7, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant15))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension16, 7, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant16))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs4, (TfLiteIntArray*)&outputs4, const_cast<void*>(static_cast<const void*>(&opdata4)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs5, (TfLiteIntArray*)&outputs5, const_cast<void*>(static_cast<const void*>(&opdata5)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs6, (TfLiteIntArray*)&outputs6, const_cast<void*>(static_cast<const void*>(&opdata6)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs7, (TfLiteIntArray*)&outputs7, const_cast<void*>(static_cast<const void*>(&opdata7)), OP_SOFTMAX, },
};
static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  if (current_location - bytes < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBuffer(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static TfLiteTensor* GetTensor(const struct TfLiteContext* context,
                               int tensor_idx) {
  return &tflTensors[tensor_idx];
}

static TfLiteEvalTensor* GetEvalTensor(const struct TfLiteContext* context,
                                       int tensor_idx) {
  return &tflEvalTensors[tensor_idx];
}

} // namespace

TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.GetTensor = &GetTensor;
  ctx.GetEvalTensor = &GetEvalTensor;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 17;
  for (size_t i = 0; i < 17; ++i) {
    tflTensors[i].type = tensorData[i].type;
    tflEvalTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    tflTensors[i].allocation_type = tensorData[i].allocation_type;
#else
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;
    tflEvalTensors[i].dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    if(tflTensors[i].allocation_type == kTfLiteArenaRw){
      uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

     tflTensors[i].data.data =  start;
     tflEvalTensors[i].data.data =  start;
    }
    else {
       tflTensors[i].data.data = tensorData[i].data;
       tflEvalTensors[i].data.data = tensorData[i].data;
    }
#else
    tflTensors[i].data.data = tensorData[i].data;
    tflEvalTensors[i].data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
    if (tflTensors[i].allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tflTensors[i].data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t i = 0; i < 8; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
tflNodes[i].custom_initial_data = nullptr;
      tflNodes[i].custom_initial_data_size = 0;
if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for (size_t i = 0; i < 8; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteTensor* trained_model_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  16, 
};
TfLiteTensor* trained_model_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus trained_model_invoke() {
  for (size_t i = 0; i < 8; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
